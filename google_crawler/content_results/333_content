Number1:
NonAPI.notEquals(.List<.T>,null)
List<.T>.isEmpty
NonAPI.conditionalAnd(.List<.T>,null)
List<.T>.get
List<.T>.size
NonAPI.minus(UNRESOLVED,int)
NonAPI.equals(java.util.List<.T>,null)
NonAPI.conditionalOr(java.util.List<.T>,null)
NonAPI.equals(.Node<.E>,null)
NoSuchElementException.<init>
List.of
CollectionUtils.lastElement
as
isEqualTo
Set.of
TreeSet>.<init>
List<.E>.add
NonAPI.equals(int,int)
List<.E>.get
List<.E>.remove
Iterables.getLast
ListUtils.last
orElse
NonAPI.equals(UNRESOLVED,int)
List.size
List.get
NonAPI.equals(.lastElementRaw,null)
Option.none
Option.some
Object.anotherMethod
Object.someMethod
List<.E>.size
LinkedList>.<init>

Number2:
NonAPI.notEquals(.ListNode,null)
NonAPI.minus(int,int)
NonAPI.greater(int,int)
NonAPI.minus(.pointer,int)
NonAPI.notEquals(.pointer,int)
NonAPI.minus(.last,.node)

Number3:
NonAPI.(.element,.some_list)
NonAPI.(.empty_list,UNRESOLVED)

Number4:
Dictionary.keys
NonAPI.plus(java.lang.String,UNRESOLVED)
NonAPI.plus(.yourDictionary,UNRESOLVED)

Number5:
NonAPI.minus(UNRESOLVED,int)
Math.max

Number6:


Number7:
Foo.<init>
List<.Foo>.add
ArrayList<.Card>.<init>
Card.<init>

Number8:
Iterable<.T>.iterator
next
Collection.iterator
Iterator.next
Iterator.hasNext
Arrays.asList
List.iterator
Iterable<java.lang.String>.spliterator
StreamSupport.stream
reduce
orElse

Number9:


Number10:
ScriptEngineManager.<init>
ScriptEngineManager.getEngineByName
ScriptEngine.put
File.<init>
ScriptEngine.eval
Invocable.invokeFunction
FileReader.<init>
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
NonAPI.plus(java.lang.String,UNRESOLVED)
NonAPI.plus(java.lang.String,java.lang.Object)
ScriptEngine.get
Invocable.invokeMethod
ScriptException.printStackTrace
NoSuchMethodException.printStackTrace
FileNotFoundException.printStackTrace
Object.getClass
NonAPI.plus(java.lang.String,Class)
Class.forName
Class<?>.isAssignableFrom
Class<?>.getMethod
Method.invoke
NonAPI.notEquals(java.lang.Object,null)
Object.equals
NonAPI.conditionalAnd(java.lang.Object,null)
System.err.println
Collection<?>.toArray
List<?>.toArray
NonAPI.minus(bits.length,int)
NonAPI.plus(UNRESOLVED,int)
Splitter.on
Splitter.trimResults
Splitter.split
Iterables.getLast
NonAPI.minus(UNRESOLVED,int)
Stream.of
reduce
get
String.split
Arrays.asList
ArrayDeque>.<init>
ArrayDeque>.getLast
String.lastIndexOf
NonAPI.plus(int,int)
String.substring
Pattern.quote
NonAPI.minus(split.length,int)
StringUtils.substringAfterLast
StringUtils.substringBeforeLast
StringUtils.substringsBetween
Iterables.getFirst

