Number1:
Point.getX
Point.getY
Vector.getX
Vector.getY
Point.<init>
Vector.<init>
Vector.isColl
System.out.println
Line2D.Double.<init>
Line2D.Double.ptLineDist

Number2:
Vector2.<init>
Math.atan2
Math.abs
Math.pow
Math.sqrt
Path2D.Double.<init>
Random.<init>
Random.nextInt
Path2D.Double.moveTo
Path2D.Double.lineTo
Path2D.Double.closePath
Area.<init>
Area.add
Path2D.Double.reset
Area.contains
Point2D.Double.setLocation
ArrayList<double[]>.<init>
Area.getPathIterator
PathIterator.isDone
PathIterator.next
PathIterator.currentSegment
ArrayList<double[]>.add
ArrayList<double[]>.size
ArrayList<double[]>.get
Line2D.Double.<init>
ArrayList<.Line2D.Double>.add
Point2D.Double.getX
Point2D.Double.getY
Line2D.Double.getP1
Line2D.Double.getP2
Point2D.Double.clone
ArrayList<.Point2D.Double>.add
Point2D.Double.distance
Dimension.<init>
Graphics.setColor
Graphics2D.fill
Graphics2D.draw
Ellipse2D.Double.<init>
AreaTest.<init>
each

Number3:
MouseEvent.getX
MouseEvent.getY
Line2D.intersects

Number4:
MouseEvent.getX
MouseEvent.getY
Point2D.distance
MouseEvent.isMetaDown
Point2D.getX
Point2D.getY
Math.max
Point.<init>
Edge.getSource
INode.getPosition
Edge.getTarget
Utilities.calculateAngle
Math.toDegrees
isDirected
Utilities.getBorderPoint
remove
forEach
Force.cancelOnReached
SUPER.getEntity
Force.hasReached
Force.end
getCollisionBox
getCenterX
getCenterY
Point2D.Double.<init>
Force.getLocation
getHeight
getX
getWidth
getY
setLocation
GeometricUtilities.calcRotationAngleInDegrees
SUPER.getPhysicsEngine
Game.getLoop
getDeltaTime
Force.getStrength
move
Force.cancelOnCollision
Shape.getPaintX1
Shape.getPaintY1
Shape.getPaintX2
Shape.getPaintY2
StringBuilder.<init>
StringBuilder.append
StringBuilder.toString
Code.append
append
ASVConfig.getASVPositions
List<.Point2D>.size
List<.Point2D>.get
NoninvertibleTransformException.printStackTrace
CellView.getBounds
JVertexView.getCellVisuals
getNodeShape
getRadius
Math.signum
Math.abs
Math.min
JVertexView.getPerimeterPoint
Point.setLocation
Track.findClosestIndex
Track.getNumPoints
Track.getPoint
Point2D.setLocation
HashSet>.<init>
Set<.ViwnNode>.removeAll
size
getNeighbors
Point2D.clone
Math.sqrt
contains
List<.Point>.size
CubicCurve2D.Double.<init>
CubicCurve2D.getBounds2D
Rectangle2D.contains
Rectangle2D.getCenterX
Rectangle2D.getCenterY
CubicCurve2D.subdivide
HistogramFilter.computeErodedBitmap
HistogramFilter.getMaxHistogramPoint
LinkedList<.Point2D.Float>.<init>
Points.add
PriorityQueue<.TrackPoint>.<init>
Point.distance
TrackPoint.<init>
PriorityQueue<.TrackPoint>.add
PriorityQueue<.TrackPoint>.isEmpty
PriorityQueue<.TrackPoint>.remove
Point2D.Float.<init>
System.out.println
Points.size
SlotcarTrack.<init>
Track.getSupport
addPropertyChangeListener
Track.create
Track.getSmoothPoints
Track.updateTrack
Double
getX
getY
Float
setLocation
distance
clone
equals
distanceSq

Number5:
Line2D.getX1()
Line2D.getY1()
Line2D.getP1()
Line2D.getX2()
Line2D.getY2()
Line2D.getP2()
Line2D.setLine​(double,double,double,double)
Line2D.setLine​(Point2D,Point2D)
Line2D.setLine​(Line2D)
Line2D.relativeCCW​(double,double,double,double,double,double)
Line2D.relativeCCW​(double,double)
Line2D.relativeCCW​(Point2D)
Line2D.linesIntersect​(double,double,double,double,double,double,double,double)
Line2D.intersectsLine​(double,double,double,double)
Line2D.intersectsLine​(Line2D)
Line2D.ptSegDistSq​(double,double,double,double,double,double)
Line2D.ptSegDist​(double,double,double,double,double,double)
Line2D.ptSegDistSq​(double,double)
Line2D.ptSegDistSq​(Point2D)
Line2D.ptSegDist​(double,double)
Line2D.ptSegDist​(Point2D)
Line2D.ptLineDistSq​(double,double,double,double,double,double)
Line2D.ptLineDist​(double,double,double,double,double,double)
Line2D.ptLineDistSq​(double,double)
Line2D.ptLineDistSq​(Point2D)
Line2D.ptLineDist​(double,double)
Line2D.ptLineDist​(Point2D)
Line2D.contains​(double,double)
Line2D.contains​(Point2D)
Line2D.intersects​(double,double,double,double)
Line2D.intersects​(Rectangle2D)
Line2D.contains​(double,double,double,double)
Line2D.contains​(Rectangle2D)
Line2D.getBounds()
Line2D.getPathIterator​(AffineTransform)
Line2D.getPathIterator​(AffineTransform,double)
Line2D.clone()


Number6:
distance
Line2D.getX1
Line2D.getY1
Line2D.getX2
Line2D.getY2
Line2D.Double.<init>

Number7:
Math.hypot
Point2D.distance
Point2D.Double.<init>

Number8:


Number9:
QuadCurve2D.getX1()
QuadCurve2D.getY1()
QuadCurve2D.getP1()
QuadCurve2D.getCtrlX()
QuadCurve2D.getCtrlY()
QuadCurve2D.getCtrlPt()
QuadCurve2D.getX2()
QuadCurve2D.getY2()
QuadCurve2D.getP2()
QuadCurve2D.setCurve​(double,double,double,double,double,double)
QuadCurve2D.setCurve​(double[],int)
QuadCurve2D.setCurve​(Point2D,Point2D,Point2D)
QuadCurve2D.setCurve​(Point2D[],int)
QuadCurve2D.setCurve​(QuadCurve2D)
QuadCurve2D.getFlatnessSq​(double,double,double,double,double,double)
QuadCurve2D.getFlatness​(double,double,double,double,double,double)
QuadCurve2D.getFlatnessSq​(double[],int)
QuadCurve2D.getFlatness​(double[],int)
QuadCurve2D.getFlatnessSq()
QuadCurve2D.getFlatness()
QuadCurve2D.subdivide​(QuadCurve2D,QuadCurve2D)
QuadCurve2D.subdivide​(QuadCurve2D,QuadCurve2D,QuadCurve2D)
QuadCurve2D.subdivide​(double[],int,double[],int,double[],int)
QuadCurve2D.solveQuadratic​(double[])
QuadCurve2D.solveQuadratic​(double[],double[])
QuadCurve2D.contains​(double,double)
QuadCurve2D.contains​(Point2D)
QuadCurve2D.intersects​(double,double,double,double)
QuadCurve2D.intersects​(Rectangle2D)
QuadCurve2D.contains​(double,double,double,double)
QuadCurve2D.contains​(Rectangle2D)
QuadCurve2D.getBounds()
QuadCurve2D.getPathIterator​(AffineTransform)
QuadCurve2D.getPathIterator​(AffineTransform,double)
QuadCurve2D.clone()


Number10:
Math.sqrt

