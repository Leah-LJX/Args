Number1:
String.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getDisplayName
String.toUpperCase
System.out.println
Integer.valueOf
ArrayList<java.lang.Integer>.<init>
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.put
HashMap<java.lang.Integer,java.lang.Integer>.put
System.currentTimeMillis
NonAPI.less(int,int)
Random.<init>
Random.nextInt
NonAPI.plus(int,UNRESOLVED)
NonAPI.reminder(int,int)
NonAPI.minus(int,int)
NonAPI.divide(int,int)
NonAPI.plus(int,int)
HashMap<java.lang.Integer,java.lang.Integer>.get
NonAPI.minus(long,long)
NonAPI.plus(java.lang.String,long)
Calendar.get
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.entrySet
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getValue
contains
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getKey
Scanner.<init>
Scanner.nextLine
NonAPI.equals(java.lang.Boolean,boolean)
SimpleDateFormat.applyPattern
SimpleDateFormat.format
String.compareTo
NonAPI.equals(int,int)
NonAPI.conditionalOr(int,int)
NonAPI.plus(java.lang.String,java.lang.String)
String.split
Integer.parseInt
NonAPI.plus(int,java.lang.String)
System.out.print
NonAPI.notEquals(int,int)
NonAPI.conditionalAnd(int,int)
NonAPI.greater(int,int)
NonAPI.conditionalAnd(java.lang.Boolean,boolean)
Scanner.next
Date.<init>
LocalDate.of
getDayOfWeek
String.valueOf
toUpperCase
ParseException.printStackTrace
Date.getDay
Calendar.set
DateFormat.format
LocalDate.now
LocalDate.getDayOfWeek
Calendar.setTimeInMillis
Scanner.nextInt
getValue
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDate
Date.getDayOfWeek
DateTimeFormatter.withLocale
DateTimeFormatter.print

Number2:
Integer.parseInt
DateTimeFormatter.ofPattern
LocalDate.of
format
LocalDate.getDayOfWeek
NonAPI.plus(java.lang.String,UNRESOLVED)
System.out.println

Number3:
System.out.println
SimpleDateFormat.<init>
SimpleDateFormat.parse
ParseException.printStackTrace
SimpleDateFormat.format
Calendar.getInstance
Calendar.get
System.out.print
String.format
LocalDate.<init>
LocalDate.dayOfWeek
getAsText
NonAPI.plus(java.lang.String,java.lang.String)
GregorianCalendar.getInstance
Calendar.set
Calendar.getTime
DateFormatSymbols.<init>
DateFormatSymbols.getWeekdays
GregorianCalendar.<init>
Locale.getDefault

Number4:
WeekFields.of
getFirstDayOfWeek
DayOfWeek.getValue
NonAPI.plus(UNRESOLVED,int)
DayOfWeek.values
NonAPI.reminder(UNRESOLVED,int)
DayOfWeek.of
LocalDate.now
TemporalAdjusters.previousOrSame
LocalDate.with
TemporalAdjusters.nextOrSame
Locale.getDisplayName
String.format
LocalDate.getDayOfWeek
NonAPI.notEquals(int,DayOfWeek.MONDAY)
LocalDate.minusDays
NonAPI.notEquals(int,DayOfWeek.SUNDAY)
LocalDate.plusDays
NonAPI.plus(java.lang.String,java.time.LocalDate)
System.out.println
Calendar.getInstance
Calendar.setTime
Calendar.set
Calendar.getTime
Calendar.add
Calendar.get
NonAPI.notEquals(int,Calendar.MONDAY)
Calendar.setFirstDayOfWeek
after
NonAPI.equals(int,int)
Date.<init>
Date.after
ZoneId.of
ZoneId.systemDefault
LocalDate.of
YearWeek.from
YearWeek.now
ThisLocalizedWeek.<init>
ThisLocalizedWeek.getFirstDay
ThisLocalizedWeek.getLastDay
GregorianCalendar.getInstance

Number5:
Calendar.getInstance
Calendar.set
Calendar.get

Number6:
Calendar.getInstance
Calendar.setTime
Calendar.get
NonAPI.equals(int,int)
NonAPI.conditionalAnd(java.lang.Boolean,java.lang.Boolean)
SimpleDateFormat.<init>
SimpleDateFormat.format
StringBuffer.equals
Date.getTime
NonAPI.divide(long,.MILLIS_PER_DAY)
NonAPI.equals(long,long)
LocalDate.<init>
DateTime.getZone
DateTime.withZone
LocalDate.equals
NonAPI.conditionalAnd(int,int)
ZoneId.of
ZonedDateTime.ofInstant
LocalDate.from
ZonedDateTime.now
Date1.isEqual
ZoneId.systemDefault
atZone
toLocalDate
equals
NonAPI.times(UNRESOLVED,int)
NonAPI.plus(int,UNRESOLVED)
NonAPI.plus(UNRESOLVED,int)
NonAPI.equals(int,UNRESOLVED)
DateUtils.isSameDay
DateTimeZone.forID
DateTime.<init>
ISODateTimeFormat.date
DateTimeFormatter.print
Time2.withZone
String.equals
DateTime.now
DateTime.withTimeAtStartOfDay
DateTime.plusDays
Interval.<init>
Interval.contains
JavaUtilDate.toInstant

Number7:
SimpleDateFormat.<init>
Comparator<.PostModel>.<init>
Collections.sort
PostModel.getDate
DateFormat.parse
Date.compareTo
ParseException.printStackTrace
DateTimeFormatter.ofPattern
LocalDate.parse
Locale.getDefault
WeekFields.of
WeekFields.weekOfWeekBasedYear
LocalDate.get
String.format
Integer.parseInt
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.get
TextField.getText
ZoneId.of
LocalDate.now
YearWeek.from

Number8:
Calendar.getInstance
SimpleDateFormat.<init>
String.isEmpty
SimpleDateFormat.parse
Calendar.setTime
ParseException.printStackTrace
Calendar.add
Calendar.getTimeInMillis
Date.<init>
SimpleDateFormat.format
Date.getTime
ParseException.getMessage
NonAPI.plus(java.lang.String,String)
Log.e
Format.parse
NonAPI.minus(UNRESOLVED,int)
DateTimeZone.forID
DateTime.now
DateTime.minusWeeks
DateTime.withTimeAtStartOfDay
GregorianCalendar.getInstance
System.currentTimeMillis
NonAPI.times(int,int)
NonAPI.minus(long,int)
Time.<init>
Time.set
Time.format
Calendar.getTime
DateTime.<init>
DateTime.toDate
LocalDate.now
LocalDate.minusWeeks
NonAPI.minus(.oldDate,double)
Format.format
ZoneId.forID
Ago.atStartOfDay
AgoStart.format

Number9:
LocalDateTime.now
LocalDateTime.with
LocalDateTime.isAfter
LocalDateTime.isBefore
NonAPI.conditionalAnd(UNRESOLVED,UNRESOLVED)
TemporalAdjusters.previousOrSame
with
TemporalAdjusters.nextOrSame
TemporalAdjusters.firstDayOfMonth
TemporalAdjusters.lastDayOfMonth
LocalDateTime.atZone
toInstant
toEpochMilli
Date.from
LocalDateTime.format
DateUtil.toString
DateUtil.toMills
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
DateUtil.startOfDay
DateUtil.endOfDay
DateUtil.belongsToCurrentDay
LocalDateTime.minusDays
LocalDateTime.plusDays
DateUtil.startOfWeek
DateUtil.endOfWeek
DateUtil.belongsToCurrentWeek
LocalDateTime.minusWeeks
LocalDateTime.plusWeeks
DateUtil.startOfMonth
DateUtil.endOfMonth
DateUtil.belongsToCurrentMonth
LocalDateTime.minusMonths
LocalDateTime.plusMonths
Scanner.<init>
System.out.print
Scanner.next
GregorianCalendar.<init>
String.split
Integer.parseInt
NonAPI.minus(int,int)
Calendar.set
SimpleDateFormat.<init>
Calendar.getTime
SimpleDateFormat.format
Calendar.add
DateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getFirstDayOfWeek
NonAPI.plus(java.lang.String,java.util.Date)
Calendar.clear
GregorianCalendar.getInstance
Date.<init>
Calendar.get
Calendar.getActualMaximum
NonAPI.equals(.Calendar,null)
LinkedHashMap<java.lang.String,java.lang.String>.<init>
NonAPI.notEquals(int,int)
Calendar.getActualMinimum
Date.getTime
NonAPI.plus(.Date,java.lang.String)
Map<java.lang.String,java.lang.String>.put
NonAPI.plus(java.lang.String,Date)
Calendar.getTimeInMillis
NonAPI.plus(java.lang.String,long)
ZonedDateTime.toLocalDate
atStartOfDay
ZonedDateTime.plusMonths
YearMonth.from
equals
OfWeek.toInstant
NonAPI.notEquals(UNRESOLVED,UNRESOLVED)
SimpleDateFormat.parse
NonAPI.plus(UNRESOLVED,int)
Calendar.setTimeInMillis
NonAPI.greater(int,int)
toLocalDate
ZoneId.systemDefault
NonAPI.reminder(int,int)
NonAPI.plus(int,int)
DateTime.<init>
DateTime.withDayOfWeek
getMillis
DateTime.withDayOfMonth
Instant.ofEpochMilli
ZoneId.of
ZonedDateTime.ofInstant
ZonedDateTime.plusWeeks

Number10:
GregorianCalendar.<init>
Calendar.set
Calendar.get
System.out.println
Calendar.getTime
Calendar.setTime

