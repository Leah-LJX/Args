Number1:
SimpleDateFormat.<init>
SimpleDateFormat.format
Integer.parseInt
Date.<init>
Date.toInstant
ZoneId.systemDefault
Instant.atZone
toLocalDate
LocalDate.getMonthValue
Calendar.getInstance
Calendar.setTime
Calendar.get
LocalDate.now
DateTime.<init>
DateTime.toString
Time.getMonthOfYear
ZoneId.of
ZonedDateTime.now
ZonedDateTime.getMonth
Month.getValue
Month.getDisplayName
System.currentTimeMillis
Date.getMonth

Number2:
String.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getDisplayName
String.toUpperCase
System.out.println
Integer.valueOf
ArrayList<java.lang.Integer>.<init>
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.put
HashMap<java.lang.Integer,java.lang.Integer>.put
System.currentTimeMillis
NonAPI.less(int,int)
Random.<init>
Random.nextInt
NonAPI.plus(int,UNRESOLVED)
NonAPI.reminder(int,int)
NonAPI.minus(int,int)
NonAPI.divide(int,int)
NonAPI.plus(int,int)
HashMap<java.lang.Integer,java.lang.Integer>.get
NonAPI.minus(long,long)
NonAPI.plus(java.lang.String,long)
Calendar.get
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.entrySet
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getValue
contains
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getKey
Scanner.<init>
Scanner.nextLine
NonAPI.equals(java.lang.Boolean,boolean)
SimpleDateFormat.applyPattern
SimpleDateFormat.format
String.compareTo
NonAPI.equals(int,int)
NonAPI.conditionalOr(int,int)
NonAPI.plus(java.lang.String,java.lang.String)
String.split
Integer.parseInt
NonAPI.plus(int,java.lang.String)
System.out.print
NonAPI.notEquals(int,int)
NonAPI.conditionalAnd(int,int)
NonAPI.greater(int,int)
NonAPI.conditionalAnd(java.lang.Boolean,boolean)
Scanner.next
Date.<init>
LocalDate.of
getDayOfWeek
String.valueOf
toUpperCase
ParseException.printStackTrace
Date.getDay
Calendar.set
DateFormat.format
LocalDate.now
LocalDate.getDayOfWeek
Calendar.setTimeInMillis
Scanner.nextInt
getValue
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDate
Date.getDayOfWeek
DateTimeFormatter.withLocale
DateTimeFormatter.print

Number3:
Date.<init>
Calendar.getInstance
Calendar.setTime
Calendar.add
Calendar.set
Calendar.getTime
SimpleDateFormat.<init>
DateFormat.format
NonAPI.plus(java.lang.String,StringBuffer)
System.out.println
SimpleDateFormat.parse
SimpleDateFormat.format
ParseException.printStackTrace
NonAPI.less(int,int)
NonAPI.plus(java.lang.String,int)
NonAPI.plus(int,java.lang.String)
DateFormat.parse
NonAPI.plus(java.lang.String,UNRESOLVED)
DateTimeFormatter.ofPattern
LocalDate.parse
LocalDate.getMonth
LocalDate.isLeapYear
length
LocalDate.withDayOfMonth
Calendar.getActualMaximum
GregorianCalendar.<init>
TemporalAdjusters.lastDayOfMonth
LocalDate.with
ZoneId.systemDefault
LocalDate.atStartOfDay
toInstant
Date.from
LocalDate.getYear
LocalDate.of
LocalDate.plusMonths
minusDays
TimeZone.getTimeZone
NonAPI.minus(.month,int)
Calendar.getTimeInMillis
LocalDate.range
ValueRange.getMaximum
Long.intValue
YearMonth.from
OfMonth.toString

Number4:
Instant.now
Month.from
NonAPI.equals(UNRESOLVED,UNRESOLVED)
Year.from
equals
NonAPI.conditionalAnd(UNRESOLVED,UNRESOLVED)
Date.toInstant
LocalDateTime.ofInstant
YearMonth.now
YearMonth.from
YearMonth.equals
SimpleDateFormat.<init>
GregorianCalendar.<init>
Calendar.get
Calendar.getTime
SimpleDateFormat.format
System.out.println
NonAPI.plus(java.lang.String,int)

Number5:
Calendar.getInstance
Day.getTime
Calendar.setTime
Calendar.getActualMaximum
Calendar.set
NonAPI.divide(int,int)
ZoneId.of
LocalDate.now
YearMonth.from
YearMonth.atEndOfMonth
Calendar.roll
Calendar.add
DateTime.<init>
DateTime.plusMonths
DateTime.withDayOfMonth
minusDays
getMillis
LocalDate.of
TemporalAdjusters.firstDayOfMonth
TemporalAdjusters.lastDayOfMonth

Number6:
LocalDate.lengthOfMonth
System.out.println
NonAPI.plus(java.lang.String,int)
SimpleDateFormat.<init>
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getActualMaximum
ParseException.printStackTrace
Scanner.<init>
System.out.print
Scanner.nextInt
NonAPI.reminder(int,int)
NonAPI.equals(int,int)
NonAPI.notEquals(int,int)
NonAPI.conditionalAnd(int,int)
NonAPI.conditionalOr(int,int)
System.exit
NonAPI.minus(int,int)
NonAPI.(int,int)
YearMonth.of
YearMonth.lengthOfMonth
MonthObject.lengthOfMonth
LocalDateTime.now
LocalDateTime.range
getMaximum
MonthDisplayHelper.<init>
MonthDisplayHelper.getNumberOfDaysInMonth
Date.<init>
SimpleDateFormat.format
String.substring
Integer.parseInt
Calendar.set
NonAPI.minus(.month,int)
GregorianCalendar.<init>
String.split
Integer.valueOf
getMaximumValue
LocalDate.of
NonAPI.equals(.month,int)
NonAPI.conditionalOr(.month,int)
NonAPI.reminder(.year,int)
NonAPI.equals(.year,int)
NonAPI.plus(int,int)
NonAPI.reminder(.month,int)
NonAPI.minus(int,.month)

Number7:
Calendar.getInstance
Calendar.setTime
Calendar.get
NonAPI.equals(int,int)
NonAPI.conditionalAnd(java.lang.Boolean,java.lang.Boolean)
System.currentTimeMillis
NonAPI.less(int,long)
Date.<init>
StringUtil.getYearMonthDay
StringUtil.getYearMonthDay2
NonAPI.minus(long,long)
System.out.println
SimpleDateFormat.<init>
SimpleDateFormat.format
SimpleDateFormat.parse
Calendar.set
Calendar.getTime
TimeZone.getTimeZone
Date.toInstant
ZoneId.systemDefault
Instant.atZone
toLocalDate
LocalDate.getYear
LocalDate.getMonthValue
LocalDate.getDayOfMonth
toUpperCase
NonAPI.plus(java.lang.String,UNRESOLVED)
Date.getTime

Number8:
LocalDate.now
LocalDate.plusMonths
plusWeeks
LocalDate.toString
String.split
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
Calendar.getInstance
Calendar.setTime
Calendar.add
Calendar.getTime
withTimeAtStartOfDay
Calendar.getActualMinimum
Calendar.set
Calendar.getActualMaximum
SimpleDateFormat.<init>
SimpleDateFormat.parse
Date.getTime
Date.<init>
Date.getMonth
NonAPI.plus(int,int)
Date.setMonth
DateUtils.addMonths
System.currentTimeMillis
DateTime.<init>
DateTime.plusMonths
toDate
ZoneId.of
Instant.now
ZonedDateTime.ofInstant
MonthLater.toLocalDate
atStartOfDay
DateTimeZone.forID
DateTime.now

Number9:
DateMagic.Measure.init
Calendar.getInstance
Calendar.set
Calendar.getActualMinimum
DateMagic.Measure.format
Calendar.getActualMaximum
GregorianCalendar.getTime
getTime
Date.<init>
GregorianCalendar.<init>
SimpleDateFormat.<init>
DateMagic.Measure.gc
DateMagic.Measure.date
SimpleDateFormat.format
NonAPI.minus(int,int)
DateMagic.Measure.<init>
DateMagic.Measure.month
year
DateMagic.Measure.max
System.out.println
DateMagic.Measure.min
Calendar.setTime
Calendar.getTime
NonAPI.minus(.month,int)
NonAPI.plus(java.lang.String,StringBuffer)
YearMonth.of
YearMonth.atDay
YearMonth.atEndOfMonth
Calendar.add
NonAPI.plus(java.lang.String,.calculatedDate)
NonAPI.plus(java.lang.String,java.lang.String)
NonAPI.minus(.selectedMonth,int)

Number10:
Date.<init>
GregorianCalendar.<init>
Calendar.setTime
Calendar.get
NonAPI.plus(int,int)
SimpleDateFormat.<init>
SimpleDateFormat.parse
SimpleDateFormat.format
Integer.parseInt
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
NonAPI.less(int,int)
NonAPI.plus(java.lang.String,int)
NonAPI.plus(UNRESOLVED,java.lang.String)
LocalDateTime.now
DateTimeFormatter.ofPattern
LocalDateTime.format
LocalDateTime.getDayOfMonth
LocalDateTime.getMonthValue
LocalDateTime.getYear
LocalDateTime.of
Calendar.getInstance
LocalDate.parse
LocalDate.getDayOfMonth
LocalDate.getMonthValue
LocalDate.getYear
ZoneId.of
LocalDate.now
Date.getYear
ZonedDateTime.now

