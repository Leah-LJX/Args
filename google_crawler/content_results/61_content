Number1:
NonAPI.times(.x,.x)
NonAPI.times(.a,.a)
NonAPI.divide(.x,.x)
NonAPI.times(.y,.y)
NonAPI.times(.b,.b)
NonAPI.divide(.y,.y)
NonAPI.plus(.x,.x)
NonAPI.lessEquals(.x,.x)
NonAPI.divide(int,int)
NonAPI.minus(.x,int)
NonAPI.minus(.y,int)

Number2:
BetterEllipse.getSegments
NonAPI.plus(int,int)
NonAPI.greater(int,int)
BetterEllipse.getCenterX
NonAPI.times(int,Math.PI)
NonAPI.divide(int,Math.PI)
Math.sin
BetterEllipse.getWidth
NonAPI.times(double,UNRESOLVED)
NonAPI.divide(double,UNRESOLVED)
NonAPI.plus(UNRESOLVED,double)
BetterEllipse.getCenterY
Math.cos
BetterEllipse.getHeight
NonAPI.equals(int,int)
NonAPI.notEquals(.AffineTransform,null)
AffineTransform.transform
NonAPI.minus(int,int)
NonAPI.minus(double,double)
NonAPI.divide(double,double)
NonAPI.plus(double,double)
BetterEllipse.currentSegment
NonAPI.less(int,coords.length)
PathIterator.<init>

Number3:
JFrame.<init>
JFrame.setTitle
JFrame.setDefaultCloseOperation
Circle.<init>
JFrame.add
JFrame.pack
JFrame.setLocationRelativeTo
JFrame.setVisible
CircleTester.getCircle
Circle.setSphere
Runnable.<init>
SwingUtilities.invokeLater
JOptionPane.showInputDialog
Integer.parseInt
NonAPI.times(int,int)
Ellipse2D.Double.<init>
Graphics2D.setColor
Graphics2D.fill
Graphics2D.draw
Dimension.<init>

Number4:
MouseEvent.getPoint
Ellipse2D.Double.contains
MouseMotionAdapter.<init>
Graphics2D.draw
Point.getX
Point.getY
NonAPI.plus(java.lang.String,int)
Graphics.drawString
Dimension.<init>
JFrame.<init>
TestShapeContains.<init>
JFrame.add
JFrame.setDefaultCloseOperation
JFrame.pack
JFrame.setLocationRelativeTo
JFrame.setVisible
Runnable.<init>
SwingUtilities.invokeLater
Ellipse2D.Double.<init>
MouseAdapter.<init>
System.out.println

Number5:


Number6:
Ellipse2D.getWidth
Ellipse2D.getHeight
NonAPI.notEquals(double,double)
NonAPI.conditionalOr(double,double)
Ellipse2D.getCenterX
NonAPI.minus(double,double)
Math.pow
Ellipse2D.getCenterY
NonAPI.plus(double,double)
NonAPI.divide(double,double)
NonAPI.lessEquals(double,double)
NonAPI.equals(double,double)
NonAPI.divide(double,int)
SVGCircle.<init>
SVGEllipse.<init>
NonAPI.less(double,int)
NonAPI.conditionalOr(double,int)
Context.domFactory.createElementNS
Ellipse2D.getX
Element.setAttributeNS
Ellipse2D.getY
Styles.fontOf
Graphics2D.setFont
Graphics2D.getFontMetrics
getStringBounds
AttributeSet.createWithParent
and
Rectangle2D.getWidth
NonAPI.minus(double,int)
NonAPI.less(double,double)
NonAPI.times(double,double)
Graphics2D.getFont
getSize2D
NonAPI.times(int,UNRESOLVED)
AnchoredText.<init>
StyledText.<init>
Arrays.asList
Rectangle2D.Double.<init>
ObjectFactoryException.<init>
Float.<init>
ObjectOutputStream.writeDouble
Rectangle2D.getX
Rectangle2D.getY
Rectangle2D.getHeight
RoundRectangle2D.getX
RoundRectangle2D.getY
RoundRectangle2D.getWidth
RoundRectangle2D.getHeight
RoundRectangle2D.getArcWidth
RoundRectangle2D.getArcHeight
Arc2D.getX
Arc2D.getY
Arc2D.getWidth
Arc2D.getHeight
Arc2D.getAngleStart
Arc2D.getAngleExtent
SHAPE_CACHE.get
NonAPI.equals(.Path,null)
Shape.getPathIterator
SHAPE_CACHE.put

Number7:
Ellipse2D.Double.<init>

Number8:
NonAPI.times(.b,UNRESOLVED)
NonAPI.minus(UNRESOLVED,.b)
NonAPI.plus(UNRESOLVED,.b)

Number9:
ShiftShape.<init>
UIManager.getSystemLookAndFeelClassName
UIManager.setLookAndFeel
JFrame.<init>
JFrame.setDefaultCloseOperation
BorderLayout.<init>
JFrame.setLayout
ShiftShape.TestPane.<init>
JFrame.add
JFrame.pack
JFrame.setLocationRelativeTo
JFrame.setVisible
Runnable.<init>
EventQueue.invokeLater
ArrayList<.ShiftShape.TestPane.Drawable>.<init>
MouseAdapter.<init>
MouseEvent.getModifiersEx
NonAPI.(int,MouseEvent.SHIFT_DOWN_MASK)
NonAPI.equals(int,MouseEvent.SHIFT_DOWN_MASK)
List<.ShiftShape.TestPane.Drawable>.isEmpty
List<.ShiftShape.TestPane.Drawable>.size
NonAPI.minus(UNRESOLVED,int)
List<.ShiftShape.TestPane.Drawable>.get
ShiftShape.TestPane.Drawable.<init>
List<.ShiftShape.TestPane.Drawable>.add
NonAPI.notEquals(.ShiftShape.TestPane.Drawable,null)
MouseEvent.getPoint
ShiftShape.TestPane.Drawable.setLocation
Dimension.<init>
Graphics.create
ShiftShape.TestPane.Drawable.draw
Graphics2D.dispose
Ellipse2D.Float.<init>
NonAPI.minus(p.x,int)
NonAPI.minus(p.y,int)
Graphics2D.translate
Graphics2D.draw

Number10:


