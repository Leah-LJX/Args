Number1:
Arrays.toString
System.out.println
ArrayList<java.lang.Integer>.<init>
NonAPI.less(int,firstArray.length)
NonAPI.less(int,secondArary.length)
NonAPI.conditionalAnd(boolean,boolean)
NonAPI.less(int,int)
ArrayList<java.lang.Integer>.add
ArrayList<java.lang.Integer>.toArray
NonAPI.less(java.lang.Iterable,java.lang.Integer)
NonAPI.greater(java.lang.Iterable,java.lang.Integer)
Predicates.in
Iterables.filter
NonAPI.lessEquals(java.lang.Iterable,java.lang.Integer)

Number2:
HashSet<java.lang.String>.<init>
Set<java.lang.String>.retainAll
HashSet<.Type>.<init>
Set<.Type>.retainAll

Number3:
SUPER.getName
City.getName
equals
String.hashCode
HashSet>.<init>
HashSet<java.lang.Integer>.add
Joiner.on
Joiner.join
NonAPI.plus(java.lang.String,UNRESOLVED)
System.out.println
HashSet<java.lang.Integer>.addAll
HashSet<.City>.<init>
Set<.City>.retainAll

Number4:
HashSet<java.lang.String>.<init>
Set<java.lang.String>.retainAll
Set<java.lang.Long>.retainAll

Number5:
Arrays.asList
ArrayList<java.lang.String>.<init>
Test.<init>
Test.intersection
System.out.println
Test.union
HashSet<.T>.<init>
Set<.T>.addAll
ArrayList<.T>.<init>
List<.T>.contains
List<.T>.add
NonAPI.plus(arr1.length,arr2.length)
NonAPI.less(int,arr1.length)
NonAPI.less(int,arr2.length)
NonAPI.plus(arr1.length,int)
Arrays.toString
NonAPI.less(int,arr3.length)
NonAPI.plus(int,int)
NonAPI.equals(int,int)
NonAPI.notEquals(int,int)
NonAPI.plus(int,java.lang.String)
System.out.print
NonAPI.less(int,array1.length)
NonAPI.less(int,array2.length)
String.indexOf
NonAPI.conditionalAnd(boolean,boolean)
NonAPI.plus(java.lang.String,int)
Collection<.T>.size
NonAPI.greater(UNRESOLVED,UNRESOLVED)
HashSet>.<init>
Collection<.T>.stream
filter
Collectors.toSet
collect
List<.T>.retainAll
List<.T>.removeAll
HashMap<java.lang.String,java.lang.Integer>.<init>
Map<java.lang.String,java.lang.Integer>.put
Map<java.lang.String,java.lang.Integer>.containsKey
List<java.lang.String>.add
System.currentTimeMillis
HashSet<java.lang.String>.<init>
Set<java.lang.String>.contains
List<java.lang.String>.size
NonAPI.minus(long,java.lang.Long)
String.valueOf
NonAPI.plus(java.lang.String,UNRESOLVED)
Set<java.lang.String>.addAll
Set<java.lang.String>.size
ArrayList<java.lang.Integer>.<init>
ArrayList<java.lang.Integer>.size
NonAPI.notEquals(int,UNRESOLVED)
ArrayList<java.lang.Integer>.get
NonAPI.less(UNRESOLVED,UNRESOLVED)
ArrayList<java.lang.Integer>.add
NonAPI.greater(UNRESOLVED,int)
HashSet.<init>
ArrayList.<init>
Collection<.T>.contains
ArrayList<.T>.add
Dates.size
NonAPI.less(int,UNRESOLVED)
PresentDates.size
Dates.get
PresentDates.get
equals
Dates.remove
Set<.T>.size
Math.min
Set<.T>.contains
Set<.T>.add
Collection<java.lang.String>.add
Collection<java.lang.String>.addAll
Collectors.toList
Stream.concat
distinct
ArrayList>.<init>
List<.foo>.stream
List<.foo>.contains
CollectionUtils.intersection
CollectionUtils.union
CollectionUtils.subtract

Number6:
NonAPI.equals(.then,.then)
NonAPI.plus(.then,.then)
NonAPI.greater(.then,.then)
NonAPI.plus(.then,int)

Number7:
Arrays.sort
NonAPI.greater(int,int)
NonAPI.plus(java.lang.String,int)
System.out.println
Arrays.copyOf
NonAPI.less(int,inputArray11.length)
NonAPI.equals(java.lang.Integer)
NonAPI.less(int,inputArray22.length)
NonAPI.less(int,inputArray33.length)
NonAPI.equals(java.lang.Integer,java.lang.Integer)
NonAPI.conditionalAnd(boolean,boolean)
NonAPI.plus(java.lang.Integer,java.lang.String)
System.out.print
Intersection3Arrays.<init>
Intersection3Arrays.intersection3Arrays
Arrays.stream
IntStream.distinct
NonAPI.equals(.y,.x)
IntStream.anyMatch
filter
toArray
HashMap>.<init>
NonAPI.equals(int,int)
Map<java.lang.Integer,java.lang.Integer>.put
Map<java.lang.Integer,java.lang.Integer>.size
Map<java.lang.Integer,java.lang.Integer>.entrySet
Map.Entry<java.lang.Integer,java.lang.Integer>.getValue
ArrayList<java.lang.Integer>.<init>
NonAPI.less(int,arr1.length)
NonAPI.less(int,arr2.length)
List<java.lang.Integer>.add
List<java.lang.Integer>.toArray
Map<java.lang.Integer,java.lang.Integer>.containsKey
Map<java.lang.Integer,java.lang.Integer>.get
NonAPI.plus(UNRESOLVED,int)
NonAPI.plus(int,java.lang.String)
NonAPI.greater(UNRESOLVED,int)
NonAPI.minus(UNRESOLVED,int)
Map<java.lang.Integer,java.lang.Integer>.remove
Arrays.asList
HashSet<java.lang.Integer>.<init>
Set<java.lang.Integer>.retainAll
Set<java.lang.Integer>.size
Set<java.lang.Integer>.toArray
ArrayList>.<init>
NonAPI.less(int,int)
ArrayList.add
HashSet>.<init>
IntStream.filter
HashSet<.T>.contains
List<.T>.add
List<.T>.toArray
intersection

Number8:
HashSet<java.lang.String>.<init>
Set<java.lang.String>.retainAll
Set<java.lang.Long>.retainAll

Number9:


