Number1:
System.out.println
System.out.print
Scanner.nextDouble
NonAPI.times(double,double)
NonAPI.plus(java.lang.String,double)
NonAPI.times(int,double)
NonAPI.plus(int,double)
NonAPI.plus(double,double)
Scanner.<init>
Scanner.nextInt
Scanner.nextLine
String.charAt
NonAPI.notEquals(java.lang.Character,java.lang.Character)
NonAPI.conditionalAnd(java.lang.Character,java.lang.Character)

Number2:
NonAPI.minus(.x1,.x2)
NonAPI.minus(.y1,.y2)
Math.hypot

Number3:
List<java.lang.Double>.size
NonAPI.less(int,UNRESOLVED)
List<java.lang.Double>.get
NonAPI.minus(int,int)
NonAPI.minus(UNRESOLVED,UNRESOLVED)
Math.abs
NonAPI.minus(UNRESOLVED,int)
NonAPI.plus(double,UNRESOLVED)
ArrayList>.<init>
Rect.getX
Entry.<init>
List<.Entry<java.lang.Double,.Rect>>.add
Rect.getW
NonAPI.plus(UNRESOLVED,UNRESOLVED)
Comparator<.Entry<java.lang.Double,.Rect>>.<init>
Collections.sort
Comparator<.Rect>.<init>
PriorityQueue>.<init>
Entry<java.lang.Double,.Rect>.getKey
Entry<java.lang.Double,.Rect>.getValue
List<java.lang.Double>.add
Queue<.Rect>.isEmpty
Queue<.Rect>.peek
getY
Queue<.Rect>.dequeue
Queue<.Rect>.enqueue
Double.compare
Rect.getH

Number4:
NonAPI.equals(java.lang.Boolean,boolean)
NonAPI.plus(double,double)
NonAPI.times(int,double)
NonAPI.plus(int,double)
NonAPI.times(int,Math.PI)
GeometricShape.getPerimeter
NonAPI.plus(java.lang.String,double)
Scanner.<init>
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
Scanner.nextInt
JOptionPane.showInputDialog
Double.parseDouble
GeometricShape.<init>
NonAPI.plus(.GeometricShape,java.lang.String)
Integer.parseInt

Number5:
NonAPI.plus(double,double)
NonAPI.times(double,double)
NonAPI.times(double,.height)
NonAPI.times(Math.PI,double)
NonAPI.divide(double,double)
NonAPI.minus(double,double)
Math.sqrt

Number6:
NonAPI.less(int,int)
NonAPI.plus(int,int)
NonAPI.reminder(int,int)
dist

Number7:
NonAPI.plus(java.lang.String,java.lang.String)
System.out.println
Math.pow
NonAPI.times(Math.PI,double)
Geometry.<init>
Geometry.printMenu

Number8:
Area.getPathIterator
FlatteningPathIterator.<init>
Line2D.Double.<init>
PathIterator.isDone
PathIterator.currentSegment
Line2D.getX2
Line2D.getY2
Line2D.setLine
IllegalArgumentException.<init>
PathIterator.next
Double.isNaN
Math.abs
NonAPI.times(double,int)
Line2D.getX1
NonAPI.times(double,double)
Line2D.getY1
NonAPI.minus(double,double)
Rectangle2D.getWidth
Rectangle2D.getHeight
NonAPI.minus(.n,int)
NonAPI.less(int,.n)
NonAPI.plus(int,int)
NonAPI.times(.x,.y)
NonAPI.plus(int,.x)
NonAPI.times(.y,.x)
NonAPI.minus(int,.x)
NonAPI.divide(int,int)
NonAPI.plus(java.lang.String,int)
System.out.println
NonAPI.less(int,.npoints)
NonAPI.reminder(int,int)
NonAPI.times(.Xs,.Ys)
NonAPI.plus(int,.Xs)
NonAPI.times(.Ys,.Xs)
NonAPI.minus(int,.Xs)

Number9:
NonAPI.greater(args.length,int)
Double.parseDouble
Rectangle.<init>
Circle.<init>
NonAPI.notEquals(.Shape,null)
Shape.area
NonAPI.plus(java.lang.String,UNRESOLVED)
System.out.println
Shape.perimeter

Number10:
NonAPI.less(int,int)
NonAPI.minus(int,int)
NonAPI.greater(double,double)
NonAPI.notEquals(double,double)
NonAPI.minus(double,double)
NonAPI.times(double,double)
NonAPI.divide(double,double)
NonAPI.plus(double,double)
NonAPI.less(double,double)
NonAPI.conditionalAnd(double,double)
NonAPI.less(double,int)
NonAPI.greater(double,int)
Vector2.<init>
NonAPI.plus(int,int)
NonAPI.reminder(int,int)
NonAPI.minus(UNRESOLVED,UNRESOLVED)
Math.atan2
NonAPI.less(int,points.length)
NonAPI.minus(a.x,b.x)
Math.abs
Math.pow
NonAPI.minus(a.y,b.y)
Math.sqrt
Path2D.Double.<init>
Random.<init>
Random.nextInt
Path2D.Double.moveTo
Path2D.Double.lineTo
Path2D.Double.closePath
Area.<init>
Area.add
Path2D.Double.reset
Area.contains
Point2D.Double.setLocation
ArrayList<double[]>.<init>
Area.getPathIterator
PathIterator.isDone
PathIterator.next
PathIterator.currentSegment
ArrayList<double[]>.add
ArrayList<double[]>.size
NonAPI.less(int,UNRESOLVED)
ArrayList<double[]>.get
NonAPI.minus(UNRESOLVED,int)
NonAPI.equals(double,PathIterator.SEG_MOVETO)
NonAPI.equals(double,PathIterator.SEG_LINETO)
Line2D.Double.<init>
ArrayList<.Line2D.Double>.add
NonAPI.equals(double,PathIterator.SEG_CLOSE)
Point2D.Double.getX
NonAPI.minus(UNRESOLVED,line.x1)
NonAPI.minus(line.x2,line.x1)
NonAPI.times(UNRESOLVED,line.x1)
Point2D.Double.getY
NonAPI.minus(UNRESOLVED,line.y1)
NonAPI.minus(line.y2,line.y1)
NonAPI.times(UNRESOLVED,line.y1)
NonAPI.plus(UNRESOLVED,line.x1)
NonAPI.times(line.x2,line.x1)
NonAPI.times(line.y2,line.y1)
NonAPI.plus(line.x2,line.x1)
NonAPI.divide(UNRESOLVED,line.x1)
NonAPI.times(double,line.x2)
NonAPI.plus(line.x1,double)
NonAPI.times(double,line.y2)
NonAPI.plus(line.y1,double)
Line2D.Double.getP1
Line2D.Double.getP2
Point2D.Double.clone
ArrayList<.Point2D.Double>.add
Point2D.Double.distance
NonAPI.less(UNRESOLVED,UNRESOLVED)
Dimension.<init>
Graphics.setColor
Graphics2D.fill
Graphics2D.draw
Ellipse2D.Double.<init>
NonAPI.minus(double,int)
AreaTest.<init>
NonAPI.minus(.point1x,.point2x)
NonAPI.minus(.point1y,.point2y)
NonAPI.times(.var,.var)
NonAPI.plus(.var,.var)

