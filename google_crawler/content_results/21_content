Number1:
DateTime.<init>
DateTimeFormat.forPattern
DateTimeFormatter.withLocale
DateTime.toString
System.out.println
DateTime.getDayOfWeek
DateTime.dayOfWeek
DateTime.Property.getAsText
WeekFields.of
getFirstDayOfWeek
ZonedDateTime.of
DateTimeFormatter.ofPattern
ZonedDateTime.format
ZonedDateTime.getDayOfWeek
getValue
WeekFields.dayOfWeek
WeekFields.ISO.dayOfWeek
WeekFields.ISO.getFirstDayOfWeek
Locale.<init>
DateTimeFormatterBuilder.<init>
DateTimeFormatterBuilder.appendPattern
appendValue
toFormatter
ZonedDateTime.parse

Number2:
TimeZone.getTimeZone
ArrayList>.<init>
SimpleDateFormat.<init>
DateFormat.setTimeZone
Date.<init>
DateFormat.format
List<java.lang.String>.add
Date.getTime
List<java.lang.Long>.add
System.out.println
DateFormat.parse
ParseException.printStackTrace
SimpleDateFormat.parse
Month.getValue
LocalDateTime.parse
ZonedDateTime.parse
DateTime.<init>
Time.toDate
DateTimeZone.forID
DateTimeFormat.forPattern
DateTimeFormatter.withZone
withLocale
DateTimeFormatter.parseDateTime
DateTime.withZone
DateTimeFormatter.ofPattern
LocalDate.parse
GregorianCalendar.<init>
Calendar.setTime
Calendar.get
Calendar.getInstance

Number3:
String.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getDisplayName
String.toUpperCase
System.out.println
LocalDate.of
getDayOfWeek
String.valueOf
Integer.valueOf
ArrayList<java.lang.Integer>.<init>
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.put
HashMap<java.lang.Integer,java.lang.Integer>.put
System.currentTimeMillis
Random.<init>
Random.nextInt
HashMap<java.lang.Integer,java.lang.Integer>.get
Calendar.get
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.entrySet
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getValue
contains
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getKey
Scanner.<init>
Scanner.nextLine
SimpleDateFormat.applyPattern
SimpleDateFormat.format
String.compareTo
String.split
Integer.parseInt
System.out.print
Date.<init>
Scanner.next
DateTimeFormatter.ofPattern
LocalDate.parse
LocalDate.getDayOfWeek
name
StackMethodTemp.getDayOfWeek
StringBuffer.toUpperCase
ParseException.printStackTrace
Date.getDay
Calendar.set
Locale.getDefault
DateFormat.format
Calendar.setTimeInMillis
LocalDate.now
getDisplayName
Calendar.SHORT.Thu.getInstance
Scanner.nextInt
getValue
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDate
Date.getDayOfWeek
DateTimeFormatter.withLocale
DateTimeFormatter.print

Number4:
SystemDateTest.<init>
SimpleDateFormat.<init>
SystemDateTest.getDate
SimpleDateFormat.format
SystemDateTest.setStringDate
SystemDateTest.getStringDate
System.out.println
Date.<init>
SimpleDateFormat.parse
ParseException.printStackTrace
DateFormat.parse
DateFormat.format
Date.toString
DateTimeFormatter.ofPattern
LocalDateTime.parse
parse
format
DateTimeFormat.forPattern
DateTimeFormatter.withZoneUTC
DateTimeFormatter.parseDateTime
ISODateTimeFormat.date
print
DateTimeZone.forID
DateTimeFormatter.withZone
DateTime.toDateTime
JOptionPane.showMessageDialog
String.substring
StringBuffer.toString

Number5:
Calendar.getInstance
Calendar.setTime
Calendar.add
Calendar.getTime
LocalDate.parse
LocalDate.plusDays
toString
Date.toInstant
ZoneId.systemDefault
Instant.atZone
ZonedDateTime.toLocalDate
DateTimeFormatter.ofPattern
LocalDate.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
SimpleDateFormat.format
Date.<init>
System.out.println
LocalDate.of
String.format
Date.getTime
TimeUnit.DAYS.toMillis
Date.atStartOfDay
toInstant
Date.from
Date.format
Instant.now
Instant.plusSeconds
DateUtil.addDays
Calendar.set
LocalDate.now
DateTime.now
DateTimeFormat.forPattern
DateTime.plusDays
DateTime.toString
DateUtils.addDays
Instant.minus
Date.getDate
Date.setDate
ISODateTimeFormat.date
DateTimeFormatter.parseDateTime
DateTimeFormatter.print

Number6:
LocalDate.<init>
LocalDate.parse
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDateTime
DateTimeFormatter.parseLocalDate
LocalDate.now
LocalDate.of

Number7:
IllegalArgumentException.<init>
DateTime.<init>
DateTime.getDayOfWeek
DateTime.plusDays
DateTime.withDayOfWeek
DateTime.toString
DateTime.dayOfWeek
DateTime.Property.get
DateTime.parse
DateTime.withTimeAtStartOfDay
DateTime.getMillis
DateTime.plus
DateTime.compareTo
String.format
ArrayList<.Date>.<init>
DateTime.dayOfMonth
List<.Date>.add
DateTimeFormat.forPattern
DateTimeFormatter.parseDateTime
DateTimeComparator.getDateOnlyInstance
DateTimeComparator.compare
HashSet>.<init>
Set<java.lang.Integer>.contains
Days.daysBetween
Days.getDays
Math.abs
DateTime.minusDays
DateTime.toDate
LocalDate.<init>
LocalDate.isAfter
LocalDate.getDayOfWeek
LocalDate.plusDays
String.length
ArrayList>.<init>
LocalDate.withDayOfWeek
ArrayList<java.lang.String>.add
DateTimeZone.forID
DateTime.getYear
DateTime.getMonthOfYear
DateTime.getDayOfMonth
DateTime.minus
Context.getString
DateTime.isBefore
DateTime.isAfter
Utils.getClassesArrayListOfDay
StandardClass.getName
String.equals
Maps.newHashMap
User.getActualTimeZoneId
User.getId
Service.getBestTimesToShare
Map<java.lang.String,.BestTimesToShare>.values
BestTimesToShare.getWeekends
BestTimesToShare.getWeekdays
List<.ActiveReadersEntry>.size
Collections.sort
List<.ActiveReadersEntry>.get
ActiveReadersEntry.getMinutes
Map<java.lang.Integer,java.lang.Double>.get
ActiveReadersEntry.getActivePercentage
Map<java.lang.Integer,java.lang.Double>.put
Map<java.lang.Integer,java.lang.Double>.keySet
ArrayList<java.lang.Integer>.<init>
Collections.reverse
List<java.lang.Integer>.size
List<java.lang.Integer>.subList
Lists.newArrayListWithCapacity
String.valueOf
StringUtils.leftPad
List<java.lang.String>.add
DataSingleton.getInstance
getMondayClasses
getTuesdayClasses
getWednesdayClasses
getThursdayClasses
getFridayClasses
getSaturdayClasses
getSundayClasses
LocalTime.<init>
LocalTime.now
LocalTime.getHourOfDay
LocalTime.withHourOfDay
LocalTime.getMinuteOfHour
withMinuteOfHour
withSecondOfMinute
withMillisOfSecond
ArrayList<.DatedStandardClass>.size
equals
StandardClass.getStartTime
isAfter
withTimeAtStartOfDay
DatedStandardClass.<init>
ArrayList<.DatedStandardClass>.add
ArrayList<.DatedStandardClass>.isEmpty
SUPER.getReadableDatabase
SQLiteDatabase.rawQuery
setMondayClasses
setTuesdayClasses
setWednesdayClasses
setThursdayClasses
setFridayClasses
setSaturdayClasses
setSundayClasses
Helper.getClassesCursor
Cursor.moveToNext
Cursor.getString
Helper.getClassLocationTeacherColor
LocalTime.parse
TimeFormatterAMPM.print
Integer.parseInt
StandardClass.<init>
ArrayList<.StandardClass>.add
ArrayList<.StandardClass>.isEmpty
Utils.setClassesArrayListOfDay
Cursor.close
DateTime.withTime
MILLIS_PER_DAY
SATURDAY
MILLIS_PER_SECOND
TUESDAY
FRIDAY
MILLIS_PER_HOUR
MONDAY
THURSDAY
MILLIS_PER_MINUTE

SUNDAY
DECEMBER
WEDNESDAY
CE
BCE
SECONDS_PER_DAY

Number8:
Locale.getDefault
DateTime.Property.getAsText
DateTime.<init>
DateTimeFormat.forPattern
DateTimeFormatter.print
DateTimeFormatter.withLocale

Number9:
DateTimeFormat.forPattern
DateTime.parse
DateTime.toString
LocalDate.now
WeekFields.ISO.weekOfWeekBasedYear
LocalDate.with
WeekFields.ISO.dayOfWeek
with
ZoneId.of
System.out.println

Number10:
DateTimeFormat.forPattern
DateTimeFormatter.withOffsetParsed
DateTimeFormatter.parseDateTime
DateTime.getZone
DateTime.toDate
DateTime.<init>
DateTimeFormatter.withZone
DateTime.toString
System.out.println
DateTimeFormatter.ofPattern
OffsetDateTime.parse
toString
ZoneId.of
atZone
Date.from
ISODateTimeFormat.dateTimeParser

