Number1:
SimpleDateFormat.<init>
System.out.println
DateFormat.parse
Date.compareTo
DateFormat.format
Date.equals
Date.before
Date.after
Calendar.getInstance
Calendar.setTime
Calendar.equals
Calendar.before
Calendar.after
SimpleDateFormat.parse
ParseException.printStackTrace
DateTimeFormatter.ofPattern
LocalDateTime.parse
LocalDateTime.isBefore

Number2:
TimeZone.getTimeZone
ArrayList>.<init>
SimpleDateFormat.<init>
DateFormat.setTimeZone
Date.<init>
DateFormat.format
List<java.lang.String>.add
Date.getTime
List<java.lang.Long>.add
System.out.println
DateFormat.parse
ParseException.printStackTrace
SimpleDateFormat.parse
Month.getValue
LocalDateTime.parse
ZonedDateTime.parse
DateTime.<init>
Time.toDate
DateTimeZone.forID
DateTimeFormat.forPattern
DateTimeFormatter.withZone
withLocale
DateTimeFormatter.parseDateTime
DateTime.withZone
DateTimeFormatter.ofPattern
LocalDate.parse
GregorianCalendar.<init>
Calendar.setTime
Calendar.get
Calendar.getInstance

Number3:
SimpleDateFormat.<init>
SimpleDateFormat.parse
Date.after
Date.getTime
TimeUnit.DAYS.convert
ParseException.printStackTrace
DateTimeFormat.forPattern
LocalDate.isAfter
LocalDate.isBefore
System.out.println
Date2.isAfter
Date2.isBefore
Date.<init>
Date.getYear
Date.getMonth
Date.getDay
Date.compareTo
ZoneId.of
LocalDate.now
LocalDate.of
LocalDateRange.of
contains
DateTimeFormatter.ofPattern
LocalDate.parse

Number4:
SimpleDateFormat.<init>
SimpleDateFormat.parse
String.compareTo
System.out.println
Instant.parse
Instant.atOffset
PreparedStatement.setObject
A.isBefore

Number5:
String.trim
String.toUpperCase
String.indexOf
String.replace
String.contains
DateFormat.parse
DateFormat.format
String.substring
String.length
Calendar.getTime
SimpleDateFormat.<init>
SimpleDateFormat.format
GregorianCalendar.getInstance
ISO8601.fromCalendar
ParseException.<init>
SimpleDateFormat.parse
Calendar.setTime
DateUtils.parseDate
Date.toString
Assert.assertEquals
DateTime.<init>
Date.getTime
String.format
RuntimeException.<init>
String.endsWith
String.replaceAll
TimeZone.getDefault
Locale.getDefault
Calendar.getInstance
Date.getHours
Date.setHours
Log.e
ParseException.printStackTrace
DatatypeConverter.parseDateTime
getTime
System.out.println
Assert.assertTrue
Locale.forLanguageTag
TimeZone.getTimeZone
SimpleDateFormat.setTimeZone
Date.toInstant
ZoneId.of
LocalDateTime.ofInstant
LocalDateTime.getYear
LocalDateTime.getDayOfMonth
LocalDateTime.getMonthValue
LocalDateTime.getHour
LocalDateTime.getMinute
LocalDateTime.getSecond
Reflection.toCharArray
CharScanner.parseIntFromTo
StringBuilder.<init>
StringBuilder.append
StringBuilder.toString
String.charAt
Dates.fromISO8601
Dates.fromISO8601_
Dates.fromJsonDate
Dates.fromJsonDate_
DateFormat.setTimeZone
Date.<init>
DatatypeFactory.newInstance
newXMLGregorianCalendar
toGregorianCalendar
ISO8601DateFormat.parse
System.currentTimeMillis
ZonedDateTime.parse
ZonedDateTime.toInstant
Date.from
Instant.parse
OffsetDateTime.parse
JSON.stringify
ISO8601DateFormat.<init>

Number6:
Date.getTime
IllegalArgumentException.<init>
SimpleDateFormat.<init>
DateFormat.parse
System.out.println
Date.after
Calendar.getInstance
Calendar.setTime
Calendar.getTimeInMillis
Calendar.add
Calendar.get
Days.daysBetween
Days.getDays
Math.abs

Number7:
InputStreamReader.<init>
BufferedReader.<init>
SimpleDateFormat.<init>
System.out.println
BufferedReader.readLine
String.trim
SimpleDateFormat.parse
Date.getTime
BufferedReader.close
DateTimeFormatter.ofPattern
LocalDate.parse
ChronoUnit.DAYS.between
System.out.print
Scanner.<init>
Scanner.nextLine
DateTimeFormat.forPattern
DateTimeFormatter.parseDateTime
LocalDate.<init>
Days.daysBetween
Days.getDays
DateFormat.parse
DateTime.<init>
DateTime.plusDays
DateTime.toDate
ArrayList<.Date>.<init>
Date.before
Date.equals
List<.Date>.add
TimeUnit.DAYS.convert
Date.toInstant
Math.abs
Long.toString
Log.e

Number8:
Calendar.getInstance
Calendar.setTime
Calendar.get
Date.<init>
SimpleDateFormat.<init>
Format.format
Date.getTime
SimpleDateFormat.parse
E.printStackTrace
DateTimeFormat.forPattern
DateTimeFormat.parseLocalDate
LocalDate.now
LocalDate.isAfter
Locale.getDefault
Calendar.compareTo
System.out.println
Calendar.add
Calendar.set
Calendar.geT

Number9:
Date.getTime
SimpleDateFormat.<init>
SimpleDateFormat.parse
ParseException.printStackTrace
TimeUnit.convert
Date.<init>
Locale.getDefault
SimpleDateFormat.format
Date.after
Calendar.getInstance
Calendar.setTime
Calendar.get
Calendar.clear
Calendar.set
Calendar.getTimeInMillis
NumberFormat.getInstance
NumberFormat.setRoundingMode
NumberFormat.setMaximumFractionDigits
NumberFormat.setMinimumFractionDigits
NumberFormat.format
NumberFormat.parse
Number.intValue
DateValue.getTime
TimeUnit.DAYS.convert
System.out.println
Days.daysBetween
Days.getDays
LocalDate.of
ChronoUnit.DAYS.between
DateTimeFormatter.ofPattern
LocalDate.parse
TimeUnit.MILLISECONDS.toDays
toString

Number10:
System.out.println
DateFormat.parse
SimpleDateFormat.<init>
DateFormat.setLenient
LocalDate.of
DateFormatter.parse
Calendar.getInstance
Calendar.setTime
String.matches
SimpleDateFormat.parse
SimpleDateFormat.format
StringBuffer.equals
DateFormat.getDateInstance
SimpleDateFormat.applyPattern
SimpleDateFormat.setLenient
String.equals
SUPER.getFullYear
toString
SUPER.getMonth
SUPER.getDate
StackMethodTemp.zeroPad
StackMethodTemp.checkLeap
Calendar.set
Calendar.getActualMaximum
String.replace
replace
ParseException.printStackTrace
ParsePosition.<init>
Pattern.compile
Matcher.quoteReplacement
Pattern.matcher
replaceAll
matches
Locale.getDefault
SimpleDateFormat.toPattern
DateTimeFormatter.ofPattern
withResolverStyle
LocalDate.parse
LocalDate.now
LocalDate.minusYears
Date.isAfter

