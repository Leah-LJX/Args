Buildfile: /root/workspace/liujiaxin/mysypet/build.xml

sypet:
     [java] ----------Options
     [java] Verbose: false
     [java] Timeout: 600000
     [java] Round Robin: false
     [java] Round Robin Iterations: 100
     [java] Round Robin Range: 2
     [java] Solver limit: 5
     [java] ----------benchmarks/google/5/benchmark5.json
     [java] Benchmark Id: 5
     [java] Method name: invert
     [java] Packages: [com.opengamma.analytics.math, org.apache.commons.math.linear]
     [java] Libraries: [./lib/commons-math-2.2.jar, ./lib/og-analytics-2.17.0.jar, ./lib/commons-lang-2.6.jar]
     [java] Source type(s): [com.opengamma.analytics.math.matrix.DoubleMatrix2D]
     [java] Target type: com.opengamma.analytics.math.matrix.DoubleMatrix2D
     [java] --------------------------------------------------------
     [java] Warning: javax.crypto.Cipher is a phantom class!
     [java] Warning: javax.crypto.IllegalBlockSizeException is a phantom class!
     [java] Warning: javax.crypto.BadPaddingException is a phantom class!
     [java] Warning: javax.crypto.NoSuchPaddingException is a phantom class!
     [java] Warning: javax.crypto.SecretKey is a phantom class!
     [java] Warning: com.opengamma.util.ArgumentChecker is a phantom class!
     [java] Warning: com.opengamma.util.money.Currency is a phantom class!
     [java] Warning: com.opengamma.util.money.CurrencyAmount is a phantom class!
     [java] Warning: com.opengamma.util.money.MultipleCurrencyAmount is a phantom class!
     [java] Warning: it.unimi.dsi.fastutil.doubles.DoubleArrayList is a phantom class!
     [java] Warning: org.threeten.bp.Period is a phantom class!
     [java] Warning: org.threeten.bp.ZonedDateTime is a phantom class!
     [java] Warning: com.opengamma.id.ExternalId is a phantom class!
     [java] Warning: com.opengamma.OpenGammaRuntimeException is a phantom class!
     [java] Warning: com.opengamma.util.tuple.Pair is a phantom class!
     [java] Warning: com.opengamma.util.tuple.Pairs is a phantom class!
     [java] Warning: org.joda.convert.ToString is a phantom class!
     [java] Warning: org.joda.convert.FromStringFactory is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalAdjuster is a phantom class!
     [java] Warning: org.threeten.bp.LocalDate is a phantom class!
     [java] Warning: com.opengamma.util.time.Expiry is a phantom class!
     [java] Warning: org.joda.beans.Bean is a phantom class!
     [java] Warning: org.joda.beans.Property is a phantom class!
     [java] Warning: org.joda.beans.MetaProperty is a phantom class!
     [java] Warning: org.joda.beans.MetaBean is a phantom class!
     [java] Warning: org.joda.beans.PropertyDefinition is a phantom class!
     [java] Warning: org.joda.beans.JodaBeanUtils is a phantom class!
     [java] Warning: org.joda.beans.BeanDefinition is a phantom class!
     [java] Warning: org.joda.beans.ImmutableBean is a phantom class!
     [java] Warning: com.opengamma.util.i18n.Country is a phantom class!
     [java] Warning: com.google.common.collect.ImmutableSet is a phantom class!
     [java] Warning: org.joda.beans.impl.flexi.FlexiBean is a phantom class!
     [java] Warning: org.joda.convert.FromString is a phantom class!
     [java] Warning: com.google.common.collect.ImmutableMap is a phantom class!
     [java] Warning: com.google.common.collect.ImmutableMap$Builder is a phantom class!
     [java] Warning: com.opengamma.util.CompareUtils is a phantom class!
     [java] Warning: com.opengamma.util.tuple.ObjectsPair is a phantom class!
     [java] Warning: org.slf4j.Logger is a phantom class!
     [java] Warning: org.slf4j.LoggerFactory is a phantom class!
     [java] Warning: com.opengamma.util.tuple.DoublesPair is a phantom class!
     [java] Warning: org.threeten.bp.chrono.ChronoZonedDateTime is a phantom class!
     [java] Warning: com.opengamma.util.time.DateUtils is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectMetaBean is a phantom class!
     [java] Warning: org.joda.beans.BeanBuilder is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectMetaProperty is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectMetaPropertyMap is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectBeanBuilder is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectFieldsBeanBuilder is a phantom class!
     [java] Warning: org.threeten.bp.temporal.Temporal is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalAmount is a phantom class!
     [java] Warning: com.opengamma.util.time.Tenor is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalAdjusters is a phantom class!
     [java] Warning: org.threeten.bp.Month is a phantom class!
     [java] Warning: com.opengamma.timeseries.precise.zdt.ZonedDateTimeDoubleTimeSeries is a phantom class!
     [java] Warning: com.opengamma.timeseries.DoubleTimeSeries is a phantom class!
     [java] Warning: com.opengamma.util.tuple.Triple is a phantom class!
     [java] Warning: com.google.common.collect.ImmutableList is a phantom class!
     [java] Warning: com.opengamma.util.tuple.FirstThenSecondDoublesPairComparator is a phantom class!
     [java] Warning: com.opengamma.util.time.Tenor$BusinessDayTenor is a phantom class!
     [java] Warning: org.threeten.bp.LocalDateTime is a phantom class!
     [java] Warning: com.opengamma.util.ParallelArrayBinarySort is a phantom class!
     [java] Warning: org.threeten.bp.LocalTime is a phantom class!
     [java] Warning: org.threeten.bp.ZoneId is a phantom class!
     [java] Warning: org.threeten.bp.chrono.ChronoLocalDate is a phantom class!
     [java] Warning: org.threeten.bp.ZoneOffset is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeries is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.localdate.ImmutableLocalDateDoubleTimeSeries is a phantom class!
     [java] Warning: com.opengamma.timeseries.precise.zdt.ImmutableZonedDateTimeDoubleTimeSeries is a phantom class!
     [java] Warning: org.threeten.bp.format.DateTimeFormatter is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalField is a phantom class!
     [java] Warning: org.threeten.bp.temporal.JulianFields is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalAccessor is a phantom class!
     [java] Warning: com.opengamma.util.tuple.FirstThenSecondPairComparator is a phantom class!
     [java] Warning: com.google.common.collect.Maps is a phantom class!
     [java] Warning: com.opengamma.util.ClassUtils is a phantom class!
     [java] Warning: com.opengamma.util.money.MultipleCurrencyAmountPricer is a phantom class!
     [java] Warning: cern.jet.random.Normal is a phantom class!
     [java] Warning: cern.jet.stat.Probability is a phantom class!
     [java] Warning: cern.jet.random.engine.RandomEngine is a phantom class!
     [java] Warning: cern.jet.random.engine.MersenneTwister64 is a phantom class!
     [java] Warning: com.opengamma.lang.annotation.ExternalFunction is a phantom class!
     [java] Warning: com.google.common.primitives.Doubles is a phantom class!
     [java] Warning: cern.colt.matrix.DoubleMatrix1D is a phantom class!
     [java] Warning: cern.colt.matrix.DoubleFactory2D is a phantom class!
     [java] Warning: cern.colt.matrix.DoubleFactory1D is a phantom class!
     [java] Warning: cern.colt.matrix.DoubleMatrix2D is a phantom class!
     [java] Warning: cern.colt.matrix.linalg.Algebra is a phantom class!
     [java] Warning: cern.colt.matrix.linalg.SingularValueDecomposition is a phantom class!
     [java] Warning: com.google.common.collect.ArrayListMultimap is a phantom class!
     [java] Warning: com.google.common.collect.ListMultimap is a phantom class!
     [java] Warning: it.unimi.dsi.fastutil.ints.IntArrayList is a phantom class!
     [java] Warning: com.google.common.collect.LinkedListMultimap is a phantom class!
     [java] Warning: com.google.common.collect.Multimap is a phantom class!
     [java] Warning: org.joda.beans.impl.direct.DirectBean is a phantom class!
     [java] Warning: com.google.common.collect.Iterators is a phantom class!
     [java] Warning: cern.jet.random.engine.MersenneTwister is a phantom class!
     [java] Warning: com.google.common.collect.Iterables is a phantom class!
     [java] Warning: com.google.common.collect.Sets$SetView is a phantom class!
     [java] Warning: com.google.common.collect.Sets is a phantom class!
     [java] Warning: org.threeten.bp.DayOfWeek is a phantom class!
     [java] Warning: org.threeten.bp.MonthDay is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.DateDoubleTimeSeries is a phantom class!
     [java] Warning: com.google.common.collect.Lists is a phantom class!
     [java] Warning: org.joda.beans.PropertyStyle is a phantom class!
     [java] Warning: cern.jet.math.Bessel is a phantom class!
     [java] Warning: com.opengamma.util.types.ParameterizedTypeImpl is a phantom class!
     [java] Warning: com.opengamma.util.types.VariantType is a phantom class!
     [java] Warning: org.apache.log4j.Logger is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.localdate.LocalDateToIntConverter is a phantom class!
     [java] Warning: cern.jet.random.StudentT is a phantom class!
     [java] Warning: com.opengamma.util.CalculationMode is a phantom class!
     [java] Warning: com.opengamma.timeseries.TimeSeriesException is a phantom class!
     [java] Warning: cern.colt.Arrays is a phantom class!
     [java] Warning: cern.jet.random.ChiSquare is a phantom class!
     [java] Warning: cern.colt.list.IntArrayList is a phantom class!
     [java] Warning: org.testng.AssertJUnit is a phantom class!
     [java] Warning: org.threeten.bp.temporal.ChronoField is a phantom class!
     [java] Warning: org.threeten.bp.temporal.TemporalUnit is a phantom class!
     [java] Warning: org.threeten.bp.temporal.ChronoUnit is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.localdate.LocalDateDoubleEntryIterator is a phantom class!
     [java] Warning: edu.emory.mathcs.jtransforms.fft.DoubleFFT_1D is a phantom class!
     [java] Warning: com.opengamma.timeseries.precise.PreciseDoubleTimeSeries is a phantom class!
     [java] Warning: com.opengamma.timeseries.date.localdate.LocalDateDoubleTimeSeriesBuilder is a phantom class!
     [java] Warning: com.opengamma.util.tuple.Quadruple is a phantom class!
     [java] Warning: cern.colt.matrix.linalg.EigenvalueDecomposition is a phantom class!
     [java] Warning: cern.jet.random.Gamma is a phantom class!
     [java] Warning: org.threeten.bp.Year is a phantom class!
     [java] ============usingGoogle===============
     [java] 5
     [java] =========cnt:=========83
     [java] =========cnt:=========103
     [java] =========cnt:=========103
     [java] #Classes: 615
     [java] #Methods: 5526
     [java] Soot Time: 5567.707908
     [java] PetriNet for path length: 1 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] #Program: 0
     [java] PetriNet for path length: 2 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] #Program: 0
     [java] PetriNet for path length: 3 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 0
     [java] =========sketch========
     [java] #Program: 2
     [java] PetriNet for path length: 4 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 2
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 4
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 6
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 8
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] sypet_clone_void
     [java] #Program: 10
     [java] =========sketch========
     [java] #Program: 12
     [java] PetriNet for path length: 5 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 12
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: double[][] getData()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealMatrix(double[][])>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 14
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 16
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 18
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 20
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 22
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 24
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 26
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 28
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] sypet_clone_org.apache.commons.math.linear.RealMatrix
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix preMultiply(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 30
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] sypet_clone_org.apache.commons.math.linear.RealMatrix
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix multiply(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 32
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>
     [java] sypet_clone_int
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealMatrix(int,int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 34
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>
     [java] sypet_clone_int
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealMatrix(int,int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 36
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] sypet_clone_org.apache.commons.math.linear.RealMatrix
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix subtract(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 38
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] sypet_clone_org.apache.commons.math.linear.RealMatrix
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix add(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 40
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.Array2DRowRealMatrix: void <init>()>
     [java] <org.apache.commons.math.linear.Array2DRowRealMatrix: org.apache.commons.math.linear.RealMatrix multiply(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 42
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix copy()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] sypet_clone_void
     [java] #Program: 44
     [java] =========sketch========
     [java] sypet_clone_void
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 46
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfColumns()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] sypet_clone_void
     [java] #Program: 48
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.matrix.DoubleMatrix2D: int getNumberOfRows()>
     [java] <org.apache.commons.math.linear.MatrixUtils: org.apache.commons.math.linear.RealMatrix createRealIdentityMatrix(int)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] sypet_clone_void
     [java] #Program: 50
     [java] =========sketch========
     [java] #Program: 52
     [java] PetriNet for path length: 6 [places: 75 ; transitions: 202 ; edges: 441]
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.RealMatrix: org.apache.commons.math.linear.RealMatrix transpose()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 52
     [java] =========sketch========
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: org.apache.commons.math.linear.RealMatrix wrap(com.opengamma.analytics.math.matrix.DoubleMatrix2D)>
     [java] <org.apache.commons.math.linear.QRDecompositionImpl: void <init>(org.apache.commons.math.linear.RealMatrix)>
     [java] <org.apache.commons.math.linear.QRDecompositionImpl: org.apache.commons.math.linear.DecompositionSolver getSolver()>
     [java] <org.apache.commons.math.linear.DecompositionSolver: org.apache.commons.math.linear.RealMatrix getInverse()>
     [java] <com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper: com.opengamma.analytics.math.matrix.DoubleMatrix2D unwrap(org.apache.commons.math.linear.RealMatrix)>
     [java] #Program: 54
     [java] =========Statistics (time in milliseconds)=========
     [java] Benchmark Id: 5
     [java] Recommend Api Number:103
     [java] Sketch Generation Time: 182.47726800000004
     [java] Sketch Completion Time: 45.635671
     [java] Compilation Time: 889.405235
     [java] Running Test cases Time: 792.385289
     [java] Synthesis Time: 1020.4982279999999
     [java] Total Time: 7477.611371
     [java] Number of components: 5
     [java] Number of holes: 6
     [java] Number of completed programs: 55
     [java] Number of sketches: 28
     [java] Solution:
     [java]  org.apache.commons.math.linear.RealMatrix sypet_var120 = com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper.wrap(sypet_arg0);
     [java]  org.apache.commons.math.linear.QRDecompositionImpl sypet_var121 = new org.apache.commons.math.linear.QRDecompositionImpl(sypet_var120);
     [java]  org.apache.commons.math.linear.DecompositionSolver sypet_var122 = sypet_var121.getSolver();
     [java]  org.apache.commons.math.linear.RealMatrix sypet_var123 = sypet_var122.getInverse();
     [java]  com.opengamma.analytics.math.matrix.DoubleMatrix2D sypet_var124 = com.opengamma.analytics.math.util.wrapper.CommonsMathWrapper.unwrap(sypet_var123);
     [java]  return sypet_var124;
     [java]  
     [java] ============================

BUILD SUCCESSFUL
Total time: 8 seconds
