Buildfile: /root/workspace/liujiaxin/mysypet/build.xml

sypet:
     [java] ----------Options
     [java] Verbose: false
     [java] Timeout: 600000
     [java] Round Robin: false
     [java] Round Robin Iterations: 100
     [java] Round Robin Range: 2
     [java] Solver limit: 5
     [java] ----------benchmarks/google/21/benchmark21.json
     [java] Benchmark Id: 21
     [java] Method name: dayOfWeek
     [java] Packages: [org.joda.time]
     [java] Libraries: [./lib/joda-time-2.8.2.jar]
     [java] Source type(s): [java.lang.String, java.lang.String]
     [java] Target type: java.lang.String
     [java] --------------------------------------------------------
     [java] Warning: javax.crypto.Cipher is a phantom class!
     [java] Warning: javax.crypto.IllegalBlockSizeException is a phantom class!
     [java] Warning: javax.crypto.BadPaddingException is a phantom class!
     [java] Warning: javax.crypto.NoSuchPaddingException is a phantom class!
     [java] Warning: javax.crypto.SecretKey is a phantom class!
     [java] Warning: org.joda.convert.ToString is a phantom class!
     [java] Warning: org.joda.convert.FromString is a phantom class!
     [java] ============usingGoogle===============
     [java] 21
     [java] =========cnt:=========75
     [java] #Classes: 246
     [java] #Methods: 4425
     [java] Soot Time: 2334.500552
     [java] PetriNet for path length: 1 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] #Program: 0
     [java] PetriNet for path length: 2 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] #Program: 0
     [java] PetriNet for path length: 3 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] #Program: 0
     [java] PetriNet for path length: 4 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 0
     [java] =========sketch========
     [java] #Program: 3
     [java] PetriNet for path length: 5 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: void <init>(org.joda.time.DateTimeZone)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 3
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 6
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime now(org.joda.time.DateTimeZone)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 9
     [java] =========sketch========
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 12
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 15
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 18
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 21
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 24
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] _upper5
     [java] <org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadableInstant)>
     [java] #Program: 27
     [java] =========sketch========
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String)>
     [java] _upper3
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadablePartial)>
     [java] #Program: 30
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter mediumDateTime()>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 33
     [java] =========sketch========
     [java] <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 36
     [java] =========sketch========
     [java] <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 39
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter mediumDateTime()>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 42
     [java] =========sketch========
     [java] <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter date()>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 45
     [java] =========sketch========
     [java] <org.joda.time.format.ISODateTimeFormat: org.joda.time.format.DateTimeFormatter dateTime()>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 48
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] _upper11
     [java] sypet_clone_void
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 51
     [java] =========sketch========
     [java] #Program: 54
     [java] PetriNet for path length: 6 [places: 48 ; transitions: 141 ; edges: 313]
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate now(org.joda.time.DateTimeZone)>
     [java] _upper3
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: java.lang.String print(org.joda.time.ReadablePartial)>
     [java] #Program: 54
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.LocalDate: void <init>(org.joda.time.DateTimeZone)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 57
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime(org.joda.time.DateTimeZone)>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 60
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime withZone(org.joda.time.DateTimeZone)>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 63
     [java] =========sketch========
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String)>
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 66
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.LocalDate toLocalDate()>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 69
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 72
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime now(org.joda.time.DateTimeZone)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 75
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: void <init>(org.joda.time.DateTimeZone)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 78
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime(org.joda.time.DateTimeZone)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 81
     [java] =========sketch========
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String)>
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime withZone(org.joda.time.DateTimeZone)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 84
     [java] =========sketch========
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 87
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate now(org.joda.time.DateTimeZone)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString(java.lang.String)>
     [java] #Program: 90
     [java] =========sketch========
     [java] <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone forID(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay(org.joda.time.DateTimeZone)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 93
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.LocalDate parseLocalDate(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 96
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 99
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 102
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 105
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.LocalDate parseLocalDate(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper5
     [java] <org.joda.time.ReadableInstant: java.lang.String toString()>
     [java] #Program: 108
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 111
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime toDateTime()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 114
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.LocalDate: org.joda.time.LocalDate parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] <org.joda.time.LocalDate: org.joda.time.DateTime toDateTimeAtStartOfDay()>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 117
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeFormatter withZoneUTC()>
     [java] <org.joda.time.format.DateTimeFormatter: org.joda.time.DateTime parseDateTime(java.lang.String)>
     [java] _upper11
     [java] <org.joda.time.base.AbstractDateTime: java.lang.String toString()>
     [java] #Program: 120
     [java] =========sketch========
     [java] <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime parse(java.lang.String,org.joda.time.format.DateTimeFormatter)>
     [java] <org.joda.time.DateTime: org.joda.time.DateTime$Property dayOfWeek()>
     [java] _upper14
     [java] <org.joda.time.field.AbstractReadableInstantFieldProperty: java.lang.String getAsText()>
     [java] #Program: 123
     [java] =========Statistics (time in milliseconds)=========
     [java] Benchmark Id: 21
     [java] Recommend Api Number:75
     [java] Sketch Generation Time: 260.182469
     [java] Sketch Completion Time: 88.593858
     [java] Compilation Time: 1132.2454340000002
     [java] Running Test cases Time: 80.39395300000002
     [java] Synthesis Time: 429.17028000000005
     [java] Total Time: 3895.916266
     [java] Number of components: 5
     [java] Number of holes: 7
     [java] Number of completed programs: 124
     [java] Number of sketches: 42
     [java] Solution:
     [java]  org.joda.time.format.DateTimeFormatter sypet_var270 = org.joda.time.format.DateTimeFormat.forPattern(sypet_arg1);
     [java]  org.joda.time.DateTime sypet_var271 = org.joda.time.DateTime.parse(sypet_arg0,sypet_var270);
     [java]  org.joda.time.DateTime.Property sypet_var272 = sypet_var271.dayOfWeek();
     [java]  org.joda.time.field.AbstractReadableInstantFieldProperty sypet_var273 = sypet_var272;
     [java]  java.lang.String sypet_var274 = sypet_var273.getAsText();
     [java]  return sypet_var274;
     [java]  
     [java] ============================

BUILD SUCCESSFUL
Total time: 4 seconds
