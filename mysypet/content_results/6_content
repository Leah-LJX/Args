Number1:
Array2DRowRealMatrix.<init>
RealMatrix.getNorm
RRQRDecomposition.<init>
RRQRDecomposition.getSolver
DecompositionSolver.isNonSingular
Solver.<init>
RRQRDecomposition.getRank
RealMatrix.getRowDimension
RealMatrix.getColumnDimension
SingularMatrixSolverException.<init>
RealMatrix.getSubMatrix
RealMatrix.multiplyEntry
RealMatrix.getRowVector
getSubVector
SingularValueDecomposition.<init>
SingularValueDecomposition.getSolver
DecompositionSolver.getInverse
RealMatrix.operate
DataConverter.convertToArray2DRowRealMatrix
QRDecomposition.<init>
QRDecomposition.getSolver
DecompositionSolver.solve
RealMatrix.getData
DataConverter.convertToMatrixBlock
MatrixUtils.createRealMatrix
getData
SUPER.getJacobian
RealMatrix.transpose
multiply
LUDecomposition.<init>
LUDecomposition.getSolver
getColumn
DoubleMatrix.<init>
Solve.solveSymmetric
CommonsMathSolver.<init>
DerivationEquation.getCovarianceLowerTriangularMatrix
CholeskyDecomposition.<init>
CholeskyDecomposition.getSolver
DerivationEquation.getConstraints
ArrayRealVector.<init>
RealVector.toArray
DefaultSlopeCoefficients.<init>
EstimationException.<init>
List<double[]>.size
IllegalArgumentException.<init>
List<double[]>.get
RealMatrix.setEntry
RealVector.setEntry
Point2D.getX
Point2D.getY
MatrixUtils.createRealVector
RealVector.getEntry
toArray
ApacheMatrix.getMatrix
ApacheVector.getVector
ApacheVector.<init>
UnsupportedOperationException.<init>
RealVector.getDimension
Preconditions.checkArgument
RealMatrix.isSquare
LUDecomposition.getDeterminant
Math.pow
getInverse
RealVector.subtract
RealMatrix.preMultiply
RealVector.dotProduct
Math.exp
solve
MathUtils.checkNotNull
Matrix.getRowDimension
DimensionMismatchException.<init>
Matrix.multiply
Model.getMeasurementNoise
add
Matrix.operate
Covariance.multiply
Estimation.add
MatrixUtils.createRealIdentityMatrix
RealMatrix.multiply
RealMatrix.subtract
Results.getTarget
getX
getY
getZ
Results.getLine
Vector3D.getX
Vector3D.getY
Vector3D.getZ
Array.getShape
Array.factory
ArrayUtil.copyToNDJavaArray
Array.getSize
Array.setDouble
Array2DRowRealMatrix.isSquare
Array2DRowRealMatrix.getRowDimension
Array2DRowRealMatrix.getColumnDimension
DMLRuntimeException.<init>
Solve.solve
RealMatrix.getEntry
getInverse
isNonSingular
solve

Number2:
DataConverter.convertToArray2DRowRealMatrix
QRDecomposition.<init>
QRDecomposition.getSolver
DecompositionSolver.solve
RealMatrix.getData
DataConverter.convertToMatrixBlock
DerivationEquation.getCovarianceLowerTriangularMatrix
Array2DRowRealMatrix.<init>
CholeskyDecomposition.<init>
CholeskyDecomposition.getSolver
DerivationEquation.getConstraints
ArrayRealVector.<init>
RealVector.toArray
DefaultSlopeCoefficients.<init>
EstimationException.<init>
List<double[]>.size
IllegalArgumentException.<init>
List<double[]>.get
MatrixUtils.createRealMatrix
RealMatrix.setEntry
RealVector.setEntry
SingularValueDecomposition.<init>
SingularValueDecomposition.getSolver
Point2D.getX
Point2D.getY
MatrixUtils.createRealVector
RealVector.getEntry
ApacheMatrix.getMatrix
LUDecomposition.<init>
LUDecomposition.getSolver
ApacheVector.getVector
ApacheVector.<init>
UnsupportedOperationException.<init>
Results.getTarget
getX
getY
getZ
Results.getLine
Vector3D.getX
Vector3D.getY
Vector3D.getZ
Array.getShape
Array.factory
ArrayUtil.copyToNDJavaArray
Array.getSize
Array.setDouble
RRQRDecomposition.<init>
RRQRDecomposition.getSolver
Matrix4d.<init>
DecodeData.getWhitePointArray
DecodeData.setIllumData
HashMap>.<init>
CalibrationCardData.getCalValues
keySet
CalibrationCardData.getLocations
get
Map<java.lang.String,float[]>.get
Map<java.lang.String,float[]>.put
getInverse
isNonSingular
solve

Number3:
Math.toRadians
Complex.<init>
Math.cos
Tools.round
Math.sin
Array2DRowFieldMatrix<.Complex>.<init>
RuntimeException.<init>
MatrixConjugator.<init>
FieldMatrix<.Complex>.walkInOptimizedOrder
UnitaryChecker.<init>
Complex.equals
ComplexField.getInstance
FieldMatrix<.Complex>.getRowDimension
FieldMatrix<.Complex>.getColumnDimension
FieldMatrix<.Complex>.getEntry
getReal
FieldMatrix<.Complex>.setEntry
multiply
BigFraction.<init>
Array2DRowFieldMatrix<.BigFraction>.<init>
MathArrays.buildArray
add
T.multiply
Array2DRowFieldMatrix<.T>.<init>
T[].clone
Array2DRowFieldMatrix<.T>.getData
FieldMatrix<.Complex>.multiply
Gate.<init>
Math.sqrt
Array2DRowFieldMatrix<.Complex>.scalarMultiply
Temp.buildP
FieldLUDecomposition<.BigFraction>.<init>
FieldLUDecomposition<.BigFraction>.getSolver
Arrays.fill
ArrayFieldVector<.BigFraction>.<init>
FieldDecompositionSolver<.BigFraction>.solve
toArray
FieldMatrix<.BigFraction>.getData
MatrixUtils.bigFractionMatrixToRealMatrix
BigFraction.doubleValue
FieldLUDecomposition<.T>.<init>
FieldLUDecomposition<.T>.getSolver
Field<.T>.getOne
ArrayFieldVector<.T>.<init>
FieldDecompositionSolver<.T>.solve
FieldMatrix<.T>.getData
Field<.T>.getZero
getData
FieldODEStateAndDerivative<.S>.getTime
S.subtract
S.divide
S.getField
getZero
Array2DRowFieldMatrix<.S>.getDataRef
S.pow
S.multiply
S.add
FieldODEStateAndDerivative<.S>.getState
divide
FieldODEStateAndDerivative<.S>.<init>
T.subtract
T.divide
T.reciprocal
subtract
solve
FieldMatrix<.T>.getRowDimension
FieldMatrix<.T>.getColumnDimension
Array2DRowFieldMatrix<.T>.getRowDimension
Array2DRowFieldMatrix<.T>.getColumnDimension
FieldMatrix<.T>.getEntry
Array2DRowFieldMatrix<.T>.setEntry


Number4:
Jama.Matrix.<init>
Jama.Matrix.print
Jama.LUDecomposition.<init>
Jama.LUDecomposition.getL
print
Jama.LUDecomposition.getU
Jama.LUDecomposition.solve
Jama.Matrix.times
minus
Jama.Matrix.normInf
System.out.println
Array2DRowRealMatrix.<init>
LUDecompositionImpl.<init>
LUDecompositionImpl.getSolver
ArrayRealVector.<init>
DecompositionSolver.solve
RealMatrix.operate
subtract
RealVector.getLInfNorm
LUDecomposition.<init>
LUDecomposition.getSolver
IllegalStateException.<init>
Math.pow
Matrix.minor
Matrix.determinant
Arrays.copyOf
Math.abs
Arrays.toString
Basic2DMatrix.<init>
Matrix.invert

Number5:
LinearObjectiveFunction.<init>
ArrayList<org.apache.commons.math3.optim.linear.LinearConstraint>.<init>
LinearConstraint.<init>
Collection<org.apache.commons.math3.optim.linear.LinearConstraint>.add
SimplexSolver.<init>
LinearConstraintSet.<init>
SimplexSolver.optimize
PointValuePair.getValue
System.out.println
PointValuePair.getPoint
System.out.print

Number6:


Number7:
FieldVector3D<.T>.getNorm
multiply
T.getReal
MathArithmeticException.<init>
divide
asin
subtract
negate
T.divide
acos
Vector3D.getNorm
RealMatrix.getRowDimension
RealVector.getDimension
DimensionMismatchException.<init>
RealMatrix.getColumnDimension
NonSquareMatrixException.<init>
RealMatrix.getEntry
FastMath.abs
RealVector.getEntry
RealVector.setEntry
MathIllegalArgumentException.<init>
Vector2D.getNorm
Vector2D.dotProduct
MathArrays.linearCombination
FastMath.asin
FastMath.acos
Math.ceil
SUPER.createExactH
FieldMatrix<.BigFraction>.power
FieldMatrix<.BigFraction>.getEntry
BigFraction.multiply
BigFraction.bigDecimalValue
doubleValue
FastMath.pow
CombinatoricsUtils.factorial
MathInternalError.<init>
MathArrays.buildArray
FieldVector<.T>.getEntry
ArrayFieldVector<.T>.<init>
List<.Pair<.T,java.lang.Double>>.size
ArrayList<.T>.<init>
List<.Pair<.T,java.lang.Double>>.get
Pair<.T,java.lang.Double>.getKey
Pair<.T,java.lang.Double>.getValue
NotPositiveException.<init>
Double.isInfinite
NotFiniteNumberException.<init>
Double.isNaN
NotANumberException.<init>
MathArrays.normalizeArray
Temp.mapDivideToSelf
Iterator.hasNext
Iterator.advance
Iterator.key
Iterator.value
FastMath.ceil
SUPER.createH
FieldMatrix<.BigFraction>.getRowDimension
Array2DRowRealMatrix.<init>
RealMatrix.setEntry
RealMatrix.power
FieldVector3D.crossProduct
normalize
FieldVector3D<.T>.normalize
FieldVector3D<.T>.getX
getField
add
FieldVector3D<.T>.getY
FieldVector3D<.T>.getZ
Vector3D.dotProduct
Vector3D.orthogonal
Vector3D.getX
Vector3D.getY
Vector3D.getZ
FastMath.sqrt
Vector3D.crossProduct
MatrixUtils.isSymmetric
getData
Vector3D.<init>
Math.pow
Temp.exactK
Temp.roundedK
NullArgumentException.<init>
BigInteger.signum
BigFraction.<init>
BigFraction.reciprocal
ArithmeticUtils.gcd
Fraction.<init>
BigReal.<init>
BigDecimal.ONE.divide
OpenMapRealVector.unitize
MathUtils.checkNotNull
MathArithmeticException.getContext
addMessage


Number8:
MatrixUtils.createRealMatrix
SingularValueDecomposition.<init>
SingularValueDecomposition.getU
getRowDimension
copySubMatrix
SingularValueDecomposition.getS
SingularValueDecomposition.getVT
getColumnDimension
multiply
RealMatrix.getData
Array2DRowRealMatrix.<init>
RealMatrix.multiply
System.out.println
RealMatrix.getRowDimension
RealMatrix.getRowVector
TestDataFrames.random
DataFrame<java.lang.String,java.lang.String>.export
asApacheMatrix
DataFrame<java.lang.String,java.lang.String>.rowCount
Assert.assertEquals
DataFrame<java.lang.String,java.lang.String>.colCount
RealMatrix.getColumnDimension
Math.random
RealMatrix.setEntry
DataFrame<java.lang.String,java.lang.String>.data
getDouble
RealMatrix.getEntry
count
ordinalOf
mapToInt
toArray
DataFrameAlgebra.LIBRARY.set
DataFrame.read
csv
Array.of
DataFrame<java.lang.Integer,java.lang.String>.cols
select
DataFrame<java.lang.Integer,java.lang.String>.inverse
QRDecomposition.<init>
QRDecomposition.getSolver
getInverse
forEach
IllegalArgumentException.<init>
RealMatrix.createMatrix
getDistance
MatrixFunctions.columnMeans
MatrixFunctions.mean
RealMatrix.copy
subtract
RealMatrix.setRowVector
RealMatrix.getColumnVector
RealMatrix.setColumnVector
RealMatrix.scalarAdd
List<double[]>.size
List<double[]>.get
MatrixUtils.createRealVector
Cholesky.<init>
RealMatrix.add
RealMatrix.scalarMultiply
MethyModel.getNaRatio
getDimension
ArrayRealVector.<init>
RealVector.setEntry
Executors.newFixedThreadPool
MethyModel.getAlpha
getEntry
MethyModel.getBeta
BetaDistribution.<init>
CalMixDens.<init>
ExecutorService.execute
ExecutorService.shutdown
ExecutorService.isTerminated
Thread.sleep
MixModel.<init>
MixModel.setMixDens
Math.sqrt
TreeParser.<init>
TreeParser.parseTree
TreeParser.getTaxonTree
TaxonId2CountCSVParser.<init>
ArrayList>.<init>
TaxonId2CountCSVParser.parse
ArrayList<.Sample>.addAll
SampleComparison.getCorrelationMatrixOfSamples
SampleComparison.getCorrelationPValuesOfSamples
IJ.log
CholeskyDecomposition.<init>
CholeskyDecomposition.getLT
LUDecomposition.<init>
LUDecomposition.getSolver
DecompositionSolver.solve
MatrixUtils.inverse
R.scalarMultiply
RealMatrix.setSubMatrix
ArrayList.<init>
DataFrame.toArray
PearsonsCorrelation.<init>
PearsonsCorrelation.getCorrelationMatrix
List.add
DerivationEquation.getCovarianceLowerTriangularMatrix
CholeskyDecomposition.getSolver
DerivationEquation.getConstraints
RealVector.toArray
DefaultSlopeCoefficients.<init>
EstimationException.<init>
size
scalarMultiply
System.out.print
MatrixFunctions.nullspace
A.multiply
MatrixFunctions.multiplyElementWise
MatrixFunctions.pow
A.getEntry
Math.pow
RealMatrix.isSquare
Array2DRowWrapper.<init>
DiagonalWrapper.<init>
DefaultWrapper.<init>
SingularValueDecomposition.getSolver
RealVector.dotProduct
MatrixFunctions.concatHorizontally
MatrixFunctions.concatVertically
RealMatrix.getSubMatrix
MatrixUtils.createRowRealMatrix
Points.getEntry
Math.abs
Range.of
DataFrame.ofDoubles
getRowDimension
getColumnDimension
setEntry
getEntry
getData
multiply
copy
operate
getColumn
getRow
setSubMatrix
scalarMultiply
getSubMatrix
add
subtract
transpose
getNorm
setRowVector
createMatrix
setColumnVector
getColumnVector

Number9:
Temp.multiply
Temp.operate
SingularValueDecomposition.<init>
SingularValueDecomposition.getSolver
solve
QRDecomposition.<init>
QRDecomposition.getSolver
ConvergenceException.<init>
Pair<.RealMatrix,.RealVector>.getFirst
Pair<.RealMatrix,.RealVector>.getSecond
LUDecomposition.<init>
LUDecomposition.getSolver
CholeskyDecomposition.<init>
CholeskyDecomposition.getSolver
ArrayRealVector.<init>
toArray
RealVector.setEntry
RealVector.getDimension
RealVector.getEntry
Array2DRowRealMatrix.<init>
DecompositionSolver.solve
ArgChecker.notNull
CommonsMathWrapper.wrap
CommonsMathWrapper.unwrap

