Number1:
DateTime.<init>
DateTimeFormat.forPattern
withLocale
DateTime.toString
System.out.println
DateTime.getDayOfWeek
DateTime.dayOfWeek
getAsText
WeekFields.of
getFirstDayOfWeek
ZonedDateTime.of
DateTimeFormatter.ofPattern
ZonedDateTime.format
ZonedDateTime.getDayOfWeek
getValue
WeekFields.dayOfWeek
WeekFields.ISO.dayOfWeek
WeekFields.ISO.getFirstDayOfWeek
Locale.<init>
DateTimeFormatterBuilder.<init>
DateTimeFormatterBuilder.appendPattern
appendValue
toFormatter
ZonedDateTime.parse

Number2:
TimeZone.getTimeZone
ArrayList>.<init>
SimpleDateFormat.<init>
DateFormat.setTimeZone
Date.<init>
DateFormat.format
List<java.lang.String>.add
Date.getTime
List<java.lang.Long>.add
System.out.println
DateFormat.parse
ParseException.printStackTrace
SimpleDateFormat.parse
Month.getValue
LocalDateTime.parse
ZonedDateTime.parse
DateTime.<init>
Time.toDate
DateTimeZone.forID
DateTimeFormat.forPattern
withZone
withLocale
DateTimeFormatter.parseDateTime
DateTime.withZone
getTime
DateTimeFormatter.ofPattern
LocalDate.parse
GregorianCalendar.<init>
Calendar.setTime
Calendar.get
Calendar.getInstance

Number3:
SystemDateTest.<init>
SimpleDateFormat.<init>
SystemDateTest.getDate
SimpleDateFormat.format
SystemDateTest.setStringDate
SystemDateTest.getStringDate
System.out.println
Date.<init>
SimpleDateFormat.parse
ParseException.printStackTrace
DateFormat.parse
DateFormat.format
Date.toString
DateTimeFormatter.ofPattern
LocalDateTime.parse
parse
format
DateTimeFormat.forPattern
DateTimeFormatter.withZoneUTC
parseDateTime
ISODateTimeFormat.date
print
DateTimeZone.forID
DateTimeFormatter.withZone
DateTime.toDateTime
JOptionPane.showMessageDialog
String.substring
toString

Number4:
String.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
Calendar.getInstance
Calendar.setTime
Calendar.getDisplayName
toUpperCase
System.out.println
LocalDate.of
getDayOfWeek
String.valueOf
Integer.valueOf
ArrayList<java.lang.Integer>.<init>
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.put
HashMap<java.lang.Integer,java.lang.Integer>.put
System.currentTimeMillis
Random.<init>
Random.nextInt
HashMap<java.lang.Integer,java.lang.Integer>.get
Calendar.get
HashMap<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.entrySet
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getValue
contains
Map.Entry<java.lang.Integer,java.util.ArrayList<java.lang.Integer>>.getKey
Scanner.<init>
Scanner.nextLine
SimpleDateFormat.applyPattern
SimpleDateFormat.format
String.compareTo
String.split
Integer.parseInt
System.out.print
Scanner.next
Date.<init>
DateTimeFormatter.ofPattern
LocalDate.parse
name
StackMethodTemp.getDayOfWeek
ParseException.printStackTrace
Date.getDay
Calendar.set
Locale.getDefault
DateFormat.format
Calendar.setTimeInMillis
LocalDate.now
LocalDate.getDayOfWeek
getDisplayName
Calendar.SHORT.Thu.getInstance
Scanner.nextInt
getValue
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDate
Date.getDayOfWeek
withLocale
DateTimeFormatter.print
DateTimeFormatter.withLocale
print

Number5:
LocalDate.<init>
LocalDate.parse
DateTimeFormat.forPattern
DateTimeFormatter.parseLocalDateTime
DateTimeFormatter.parseLocalDate
LocalDate.now
LocalDate.of

Number6:
Calendar.getInstance
Calendar.setTime
Calendar.add
Calendar.getTime
LocalDate.parse
plusDays
toString
Date.toInstant
ZoneId.systemDefault
Instant.atZone
ZonedDateTime.toLocalDate
LocalDate.plusDays
DateTimeFormatter.ofPattern
LocalDate.format
SimpleDateFormat.<init>
SimpleDateFormat.parse
SimpleDateFormat.format
Date.<init>
System.out.println
LocalDate.of
Date.getTime
TimeUnit.DAYS.toMillis
Date.atStartOfDay
toInstant
Date.from
Date.format
Instant.now
plusSeconds
DateUtil.addDays
Calendar.set
LocalDate.now
format
DateTime.now
DateTimeFormat.forPattern
DateTime.plusDays
DateUtils.addDays
minus
Date.getDate
Date.setDate
ISODateTimeFormat.date
DateTimeFormatter.parseDateTime
DateTimeFormatter.print

Number7:
ISODateTimeFormat.dateTime
DateTimeFormatter.parseDateTime
DateTimeFormat.mediumDateTime
DateTimeFormatter.print
System.out.println
dateTimeFormat.parseDateTime
dateTimeAndTZFormat.parseDateTime
dateTimeWithSubSecFormat.parseDateTime
dateTimeWithSubSecAndTZFormat.parseDateTime
DateTimeFormat.forPattern
DateTimeZone.forID
withZone

Number8:
DateTimeFormat.forPattern
DateTime.parse
DateTime.toString
LocalDate.now
WeekFields.ISO.weekOfWeekBasedYear
with
WeekFields.ISO.dayOfWeek
ZoneId.of
LocalDate.with
System.out.println

Number9:
DateTime.<init>
DateTime.dayOfWeek
withMaximumValue
toDate
withMinimumValue
roundFloorCopy
DateTime.plusDays
DateTime.toDate
LocalDate.<init>
LocalDate.toDateTimeAtStartOfDay
dayOfWeek
getMaximumValue
Date.<init>
Lists.newArrayList
get
Shift.worksAt
DateTime.toLocalDate
Shift.findWorkTimeAt
DateTimeRange.<init>
List<.DateTimeRange>.add
DateTime.Property.getAsText
getAsText
WordUtils.capitalize
DateTime.Property.getAsShortText

