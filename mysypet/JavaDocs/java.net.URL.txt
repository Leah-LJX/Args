URL.getProtocol()	Gets the protocol name of this URL
URL.URL(String)	Creates a URL object from the String representation
URL.toURI()	Returns a URI equivalent to this URL
URL.getContent(Class[])	Gets the contents of this URL This method is a shorthand for openConnection getContent Class
URL.toExternalForm()	Constructs a string representation of this URL The string is created by calling the toExternalForm method of the stream protocol handler for this object
URL.getContent()	Gets the contents of this URL This method is a shorthand for openConnection getContent
URL.URL(URL,String)	Creates a URL by parsing the given spec within a specified context
URL.getHost()	Gets the host name of this URL if applicable
URL.openConnection(Proxy)	Same as openConnection except that the connection will be made through the specified proxy Protocol handlers that do not support proxing will ignore the proxy parameter and make a normal connection
URL.getQuery()	Gets the query part of this URL
URL.toString()	Constructs a string representation of this URL The string is created by calling the toExternalForm method of the stream protocol handler for this object
URL.openStream()	Opens a connection to this URL and returns an InputStream for reading from that connection This method is a shorthand for openConnection getInputStream
URL.equals(Object)	Compares this URL for equality with another object
URL.getPort()	Gets the port number of this URL
URL.getDefaultPort()	Gets the default port number of the protocol associated with this URL If the URL scheme or the URLStreamHandler for the URL do not define a default port number then 1 is returned
URL.getRef()	Gets the anchor also known as the reference of this URL
URL.sameFile(URL)	Compares two URLs excluding the fragment component
URL.URL(String,String,String)	Creates a URL from the specified protocol name host name and file name The default port for the specified protocol is used
URL.getPath()	Gets the path part of this URL
URL.URL(URL,String,URLStreamHandler)	Creates a URL by parsing the given spec with the specified handler within a specified context If the handler is null the parsing occurs as with the two argument constructor
URL.setURLStreamHandlerFactory(URLStreamHandlerFactory)	Sets an application s URLStreamHandlerFactory
URL.hashCode()	Creates an integer suitable for hash table indexing
URL.getUserInfo()	Gets the userInfo part of this URL
URL.openConnection()	Returns a URLConnection instance that represents a connection to the remote object referred to by the URL
URL.URL(String,String,int,String)	Creates a URL object from the specified protocol host port number and file
URL.URL(String,String,int,String,URLStreamHandler)	Creates a URL object from the specified protocol host port number file and handler Specifying a port number of 1 indicates that the URL should use the default port for the protocol Specifying a handler of null indicates that the URL should use a default stream handler for the protocol as outlined for java net URL URL java lang String java lang String int java lang String If the handler is not null and there is a security manager the security manager s checkPermission method is called with a NetPermission specifyStreamHandler permission
URL.getAuthority()	Gets the authority part of this URL
URL.getFile()	Gets the file name of this URL
