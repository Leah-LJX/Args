Long.shortValue()	Returns the value of this Long as a short
Long.doubleValue()	Returns the value of this Long as a double
Long.toString(long)	Returns a String object representing the specified long The argument is converted to signed decimal representation and returned as a string exactly as if the argument and the radix 10 were given as arguments to the toString long int method
Long.signum(long)	Returns the signum function of the specified long value The return value is 1 if the specified value is negative 0 if the specified value is zero and 1 if the specified value is positive
Long.rotateLeft(long,int)	Returns the value obtained by rotating the two s complement binary representation of the specified long value left by the specified number of bits Bits shifted out of the left hand or high order side reenter on the right or low order Note that left rotation with a negative distance is equivalent to right rotation rotateLeft val distance rotateRight val distance Note also that rotation by any multiple of 64 is a no op so all but the last six bits of the rotation distance can be ignored even if the distance is negative rotateLeft val distance rotateLeft val distance 0x3F
Long.Long(long)	Constructs a newly allocated Long object that represents the specified long argument
Long.toHexString(long)	Returns a string representation of the long argument as an unsigned integer in base 16
Long.getLong(String,long)	Determines the long value of the system property with the specified name
Long.intValue()	Returns the value of this Long as an int
Long.decode(String)	Decodes a String into a Long
Long.rotateRight(long,int)	Returns the value obtained by rotating the two s complement binary representation of the specified long value right by the specified number of bits Bits shifted out of the right hand or low order side reenter on the left or high order Note that right rotation with a negative distance is equivalent to left rotation rotateRight val distance rotateLeft val distance Note also that rotation by any multiple of 64 is a no op so all but the last six bits of the rotation distance can be ignored even if the distance is negative rotateRight val distance rotateRight val distance 0x3F
Long.longValue()	Returns the value of this Long as a long value
Long.compareTo(Long)	Compares two Long objects numerically
Long.reverse(long)	Returns the value obtained by reversing the order of the bits in the two s complement binary representation of the specified long value
Long.valueOf(String)	Returns a Long object holding the value of the specified String The argument is interpreted as representing a signed decimal long exactly as if the argument were given to the parseLong java lang String method The result is a Long object that represents the integer value specified by the string
Long.toBinaryString(long)	Returns a string representation of the long argument as an unsigned integer in base 2
Long.getLong(String)	Determines the long value of the system property with the specified name
Long.parseLong(String,int)	Parses the string argument as a signed long in the radix specified by the second argument The characters in the string must all be digits of the specified radix as determined by whether Character digit char int returns a nonnegative value except that the first character may be an ASCII minus sign u002D to indicate a negative value or an ASCII plus sign u002B to indicate a positive value The resulting long value is returned
Long.valueOf(String,int)	Returns a Long object holding the value extracted from the specified String when parsed with the radix given by the second argument The first argument is interpreted as representing a signed long in the radix specified by the second argument exactly as if the arguments were given to the parseLong java lang String int method The result is a Long object that represents the long value specified by the string
Long.hashCode()	Returns a hash code for this Long The result is the exclusive OR of the two halves of the primitive long value held by this Long object That is the hashcode is the value of the expression int this longValue this longValue 32
Long.compare(long,long)	Compares two long values numerically
Long.numberOfTrailingZeros(long)	Returns the number of zero bits following the lowest order rightmost one bit in the two s complement binary representation of the specified long value Returns 64 if the specified value has no one bits in its two s complement representation in other words if it is equal to zero
Long.reverseBytes(long)	Returns the value obtained by reversing the order of the bytes in the two s complement representation of the specified long value
Long.equals(Object)	Compares this object to the specified object The result is true if and only if the argument is not null and is a Long object that contains the same long value as this object
Long.toString(long,int)	Returns a string representation of the first argument in the radix specified by the second argument
Long.numberOfLeadingZeros(long)	Returns the number of zero bits preceding the highest order leftmost one bit in the two s complement binary representation of the specified long value Returns 64 if the specified value has no one bits in its two s complement representation in other words if it is equal to zero
Long.valueOf(long)	Returns a Long instance representing the specified long value
Long.toOctalString(long)	Returns a string representation of the long argument as an unsigned integer in base 8
Long.highestOneBit(long)	Returns a long value with at most a single one bit in the position of the highest order leftmost one bit in the specified long value Returns zero if the specified value has no one bits in its two s complement binary representation that is if it is equal to zero
Long.toString()	Returns a String object representing this Long s value The value is converted to signed decimal representation and returned as a string exactly as if the long value were given as an argument to the toString long method
Long.floatValue()	Returns the value of this Long as a float
Long.Long(String)	Constructs a newly allocated Long object that represents the long value indicated by the String parameter The string is converted to a long value in exactly the manner used by the parseLong method for radix 10
Long.parseLong(String)	Parses the string argument as a signed decimal long
Long.byteValue()	Returns the value of this Long as a byte
Long.bitCount(long)	Returns the number of one bits in the two s complement binary representation of the specified long value This function is sometimes referred to as the population count
Long.lowestOneBit(long)	Returns a long value with at most a single one bit in the position of the lowest order rightmost one bit in the specified long value Returns zero if the specified value has no one bits in its two s complement binary representation that is if it is equal to zero
Long.getLong(String,Long)	Returns the long value of the system property with the specified name The first argument is treated as the name of a system property System properties are accessible through the System getProperty java lang String method The string value of this property is then interpreted as a long value as per the Long decode method and a Long object representing this value is returned
