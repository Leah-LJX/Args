SAXParserFactory.isNamespaceAware()	Indicates whether or not the factory is configured to produce parsers which are namespace aware
SAXParserFactory.newInstance()	Obtain a new instance of a SAXParserFactory This static method creates a new factory instance This method uses the following ordered lookup procedure to determine the SAXParserFactory implementation class to load Use the javax xml parsers SAXParserFactory system property
DocumentBuilderFactory.getSchema()	Gets the Schema object specified through the setSchema Schema schema method
SAXParserFactory.setSchema(Schema)	Set the Schema to be used by parsers created from this factory
SAXParser.isNamespaceAware()	Indicates whether or not this parser is configured to understand namespaces
ParserConfigurationException.ParserConfigurationException()	Create a new ParserConfigurationException with no detail mesage
DocumentBuilderFactory.setFeature(String,boolean)	Set a feature for this DocumentBuilderFactory and DocumentBuilders created by this factory
SAXParser.getXMLReader()	Returns the XMLReader that is encapsulated by the implementation of this class
SAXParser.parse(File,HandlerBase)	Parse the content of the file specified as XML using the specified HandlerBase
ParserConfigurationException.ParserConfigurationException(String)	Create a new ParserConfigurationException with the String specified as an error message
SAXParserFactory.setFeature(String,boolean)	Sets the particular feature in the underlying implementation of org xml sax XMLReader
DocumentBuilderFactory.setValidating(boolean)	Specifies that the parser produced by this code will validate documents as they are parsed By default the value of this is set to false
SAXParser.reset()	Reset this SAXParser to its original configuration
SAXParser.getSchema()	Get a reference to the the Schema being used by the XML processor
DocumentBuilder.newDocument()	Obtain a new instance of a DOM Document object to build a DOM tree with
DocumentBuilder.isValidating()	Indicates whether or not this parser is configured to validate XML documents
SAXParserFactory.setNamespaceAware(boolean)	Specifies that the parser produced by this code will provide support for XML namespaces By default the value of this is set to false
FactoryConfigurationError.FactoryConfigurationError(String)	Create a new FactoryConfigurationError with the String specified as an error message
DocumentBuilder.parse(InputStream)	Parse the content of the given InputStream as an XML document and return a new DOM Document object
DocumentBuilderFactory.getFeature(String)	Get the state of the named feature
FactoryConfigurationError.FactoryConfigurationError()	Create a new FactoryConfigurationError with no detail mesage
SAXParser.parse(InputStream,DefaultHandler)	Parse the content of the given InputStream instance as XML using the specified DefaultHandler
DocumentBuilderFactory.isIgnoringElementContentWhitespace()	Indicates whether or not the factory is configured to produce parsers which ignore ignorable whitespace in element content
DocumentBuilderFactory.newInstance(String,ClassLoader)	Obtain a new instance of a DocumentBuilderFactory from class name
DocumentBuilder.getDOMImplementation()	Obtain an instance of a DOMImplementation object
DocumentBuilder.setEntityResolver(EntityResolver)	Specify the EntityResolver to be used to resolve entities present in the XML document to be parsed Setting this to null will result in the underlying implementation using it s own default implementation and behavior
SAXParser.getParser()	Returns the SAX parser that is encapsultated by the implementation of this class
FactoryConfigurationError.getMessage()	Return the message if any for this error If there is no message for the exception and there is an encapsulated exception then the message of that exception if it exists will be returned Else the name of the encapsulated exception will be returned
DocumentBuilderFactory.setExpandEntityReferences(boolean)	Specifies that the parser produced by this code will expand entity reference nodes By default the value of this is set to true
SAXParser.parse(InputStream,HandlerBase)	Parse the content of the given InputStream instance as XML using the specified HandlerBase
FactoryConfigurationError.getCause()	use the exception chaining mechanism of JDK1 4
SAXParser.parse(File,DefaultHandler)	Parse the content of the file specified as XML using the specified DefaultHandler
DocumentBuilderFactory.isExpandEntityReferences()	Indicates whether or not the factory is configured to produce parsers which expand entity reference nodes
DocumentBuilder.parse(InputStream,String)	Parse the content of the given InputStream as an XML document and return a new DOM Document object
SAXParserFactory.getSchema()	Gets the Schema object specified through the setSchema Schema schema method
DocumentBuilder.parse(File)	Parse the content of the given file as an XML document and return a new DOM Document object
DocumentBuilderFactory.newDocumentBuilder()	Creates a new instance of a DocumentBuilder using the currently configured parameters
DocumentBuilderFactory.setNamespaceAware(boolean)	Specifies that the parser produced by this code will provide support for XML namespaces By default the value of this is set to false
DocumentBuilder.isNamespaceAware()	Indicates whether or not this parser is configured to understand namespaces
SAXParser.parse(InputStream,DefaultHandler,String)	Parse the content of the given InputStream instance as XML using the specified DefaultHandler
SAXParser.parse(InputStream,HandlerBase,String)	Parse the content of the given InputStream instance as XML using the specified HandlerBase
DocumentBuilder.parse(InputSource)	Parse the content of the given input source as an XML document and return a new DOM Document object
FactoryConfigurationError.getException()	Return the actual exception if any that caused this exception to be raised
DocumentBuilderFactory.setSchema(Schema)	Set the Schema to be used by parsers created from this factory
FactoryConfigurationError.FactoryConfigurationError(Exception,String)	Create a new FactoryConfigurationError with the given Exception base cause and detail message
DocumentBuilder.parse(String)	Parse the content of the given URI as an XML document and return a new DOM Document object
SAXParserFactory.setValidating(boolean)	Specifies that the parser produced by this code will validate documents as they are parsed By default the value of this is set to false
DocumentBuilder.getSchema()	Get a reference to the the Schema being used by the XML processor
DocumentBuilderFactory.setIgnoringComments(boolean)	Specifies that the parser produced by this code will ignore comments By default the value of this is set to false
SAXParserFactory.newInstance(String,ClassLoader)	Obtain a new instance of a SAXParserFactory from class name
SAXParserFactory.isValidating()	Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse
SAXParser.parse(String,HandlerBase)	Parse the content described by the giving Uniform Resource Identifier URI as XML using the specified HandlerBase
DocumentBuilderFactory.setAttribute(String,Object)	Allows the user to set specific attributes on the underlying implementation
SAXParserFactory.isXIncludeAware()	Get state of XInclude processing
DocumentBuilderFactory.getAttribute(String)	Allows the user to retrieve specific attributes on the underlying implementation
SAXParser.isValidating()	Indicates whether or not this parser is configured to validate XML documents
DocumentBuilder.reset()	Reset this DocumentBuilder to its original configuration
DocumentBuilder.setErrorHandler(ErrorHandler)	Specify the ErrorHandler to be used by the parser
SAXParser.parse(InputSource,HandlerBase)	Parse the content given InputSource as XML using the specified HandlerBase
DocumentBuilderFactory.isIgnoringComments()	Indicates whether or not the factory is configured to produce parsers which ignores comments
DocumentBuilder.isXIncludeAware()	Get the XInclude processing mode for this parser
DocumentBuilderFactory.isValidating()	Indicates whether or not the factory is configured to produce parsers which validate the XML content during parse
DocumentBuilderFactory.isNamespaceAware()	Indicates whether or not the factory is configured to produce parsers which are namespace aware
SAXParser.setProperty(String,Object)	Sets the particular property in the underlying implementation of XMLReader
SAXParser.parse(InputSource,DefaultHandler)	Parse the content given InputSource as XML using the specified DefaultHandler
SAXParserFactory.setXIncludeAware(boolean)	Set state of XInclude processing
DocumentBuilderFactory.isCoalescing()	Indicates whether or not the factory is configured to produce parsers which converts CDATA nodes to Text nodes and appends it to the adjacent if any Text node
SAXParser.getProperty(String)	Returns the particular property requested for in the underlying implementation of XMLReader
DocumentBuilderFactory.isXIncludeAware()	Get state of XInclude processing
SAXParser.parse(String,DefaultHandler)	Parse the content described by the giving Uniform Resource Identifier URI as XML using the specified DefaultHandler
DocumentBuilderFactory.setIgnoringElementContentWhitespace(boolean)	Specifies that the parsers created by this factory must eliminate whitespace in element content sometimes known loosely as ignorable whitespace when parsing XML documents see XML Rec 2 10 Note that only whitespace which is directly contained within element content that has an element only content model see XML Rec 3 2 1 will be eliminated Due to reliance on the content model this setting requires the parser to be in validating mode By default the value of this is set to false
SAXParserFactory.newSAXParser()	Creates a new instance of a SAXParser using the currently configured factory parameters
FactoryConfigurationError.FactoryConfigurationError(Exception)	Create a new FactoryConfigurationError with a given Exception base cause of the error
DocumentBuilderFactory.setXIncludeAware(boolean)	Set state of XInclude processing
SAXParserFactory.getFeature(String)	Returns the particular property requested for in the underlying implementation of org xml sax XMLReader
DocumentBuilderFactory.newInstance()	Obtain a new instance of a DocumentBuilderFactory This static method creates a new factory instance
DocumentBuilderFactory.setCoalescing(boolean)	Specifies that the parser produced by this code will convert CDATA nodes to Text nodes and append it to the adjacent if any text node By default the value of this is set to false
SAXParser.isXIncludeAware()	Get the XInclude processing mode for this parser
